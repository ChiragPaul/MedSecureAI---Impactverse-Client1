{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/router-reducer/router-reducer-types.js"],"sourcesContent":["export const ACTION_REFRESH = 'refresh';\nexport const ACTION_NAVIGATE = 'navigate';\nexport const ACTION_RESTORE = 'restore';\nexport const ACTION_SERVER_PATCH = 'server-patch';\nexport const ACTION_PREFETCH = 'prefetch';\nexport const ACTION_HMR_REFRESH = 'hmr-refresh';\nexport const ACTION_SERVER_ACTION = 'server-action';\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */ export var PrefetchKind = /*#__PURE__*/ function(PrefetchKind) {\n    PrefetchKind[\"AUTO\"] = \"auto\";\n    PrefetchKind[\"FULL\"] = \"full\";\n    PrefetchKind[\"TEMPORARY\"] = \"temporary\";\n    return PrefetchKind;\n}({});\nexport var PrefetchCacheEntryStatus = /*#__PURE__*/ function(PrefetchCacheEntryStatus) {\n    PrefetchCacheEntryStatus[\"fresh\"] = \"fresh\";\n    PrefetchCacheEntryStatus[\"reusable\"] = \"reusable\";\n    PrefetchCacheEntryStatus[\"expired\"] = \"expired\";\n    PrefetchCacheEntryStatus[\"stale\"] = \"stale\";\n    return PrefetchCacheEntryStatus;\n}({});\n\n//# sourceMappingURL=router-reducer-types.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAO,MAAM,iBAAiB;AACvB,MAAM,kBAAkB;AACxB,MAAM,iBAAiB;AACvB,MAAM,sBAAsB;AAC5B,MAAM,kBAAkB;AACxB,MAAM,qBAAqB;AAC3B,MAAM,uBAAuB;AAMzB,IAAI,eAAe,WAAW,GAAG,SAAS,YAAY;IAC7D,YAAY,CAAC,OAAO,GAAG;IACvB,YAAY,CAAC,OAAO,GAAG;IACvB,YAAY,CAAC,YAAY,GAAG;IAC5B,OAAO;AACX,EAAE,CAAC;AACI,IAAI,2BAA2B,WAAW,GAAG,SAAS,wBAAwB;IACjF,wBAAwB,CAAC,QAAQ,GAAG;IACpC,wBAAwB,CAAC,WAAW,GAAG;IACvC,wBAAwB,CAAC,UAAU,GAAG;IACtC,wBAAwB,CAAC,QAAQ,GAAG;IACpC,OAAO;AACX,EAAE,CAAC,IAEH,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/app-router-headers.js"],"sourcesContent":["export const RSC_HEADER = 'rsc';\nexport const ACTION_HEADER = 'next-action';\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'next-router-state-tree';\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'next-router-prefetch';\n// This contains the path to the segment being prefetched.\n// TODO: If we change next-router-state-tree to be a segment path, we can use\n// that instead. Then next-router-prefetch and next-router-segment-prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER = 'next-router-segment-prefetch';\nexport const NEXT_HMR_REFRESH_HEADER = 'next-hmr-refresh';\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__';\nexport const NEXT_URL = 'next-url';\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nexport const FLIGHT_HEADERS = [\n    RSC_HEADER,\n    NEXT_ROUTER_STATE_TREE_HEADER,\n    NEXT_ROUTER_PREFETCH_HEADER,\n    NEXT_HMR_REFRESH_HEADER,\n    NEXT_ROUTER_SEGMENT_PREFETCH_HEADER\n];\nexport const NEXT_RSC_UNION_QUERY = '_rsc';\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time';\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed';\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path';\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query';\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender';\nexport const NEXT_ACTION_NOT_FOUND_HEADER = 'x-nextjs-action-not-found';\n\n//# sourceMappingURL=app-router-headers.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,aAAa;AACnB,MAAM,gBAAgB;AAItB,MAAM,gCAAgC;AACtC,MAAM,8BAA8B;AAKpC,MAAM,sCAAsC;AAC5C,MAAM,0BAA0B;AAChC,MAAM,+BAA+B;AACrC,MAAM,WAAW;AACjB,MAAM,0BAA0B;AAChC,MAAM,iBAAiB;IAC1B;IACA;IACA;IACA;IACA;CACH;AACM,MAAM,uBAAuB;AAC7B,MAAM,gCAAgC;AACtC,MAAM,2BAA2B;AACjC,MAAM,6BAA6B;AACnC,MAAM,8BAA8B;AACpC,MAAM,2BAA2B;AACjC,MAAM,+BAA+B,6BAE5C,8CAA8C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/app-call-server.js"],"sourcesContent":["import { startTransition } from 'react';\nimport { ACTION_SERVER_ACTION } from './components/router-reducer/router-reducer-types';\nimport { dispatchAppRouterAction } from './components/use-action-queue';\nexport async function callServer(actionId, actionArgs) {\n    return new Promise((resolve, reject)=>{\n        startTransition(()=>{\n            dispatchAppRouterAction({\n                type: ACTION_SERVER_ACTION,\n                actionId,\n                actionArgs,\n                resolve,\n                reject\n            });\n        });\n    });\n}\n\n//# sourceMappingURL=app-call-server.js.map"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;;AAEO,eAAe,WAAW,QAAQ,EAAE,UAAU;IACjD,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,IAAA,4RAAe,EAAC;YACZ,wBAAwB;gBACpB,MAAM,0SAAoB;gBAC1B;gBACA;gBACA;gBACA;YACJ;QACJ;IACJ;AACJ,EAEA,2CAA2C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/app-find-source-map-url.js"],"sourcesContent":["const basePath = process.env.__NEXT_ROUTER_BASEPATH || '';\nconst pathname = \"\" + basePath + \"/__nextjs_source-map\";\nexport const findSourceMapURL = process.env.NODE_ENV === 'development' ? function findSourceMapURL(filename) {\n    if (filename === '') {\n        return null;\n    }\n    if (filename.startsWith(document.location.origin) && filename.includes('/_next/static')) {\n        // This is a request for a client chunk. This can only happen when\n        // using Turbopack. In this case, since we control how those source\n        // maps are generated, we can safely assume that the sourceMappingURL\n        // is relative to the filename, with an added `.map` extension. The\n        // browser can just request this file, and it gets served through the\n        // normal dev server, without the need to route this through\n        // the `/__nextjs_source-map` dev middleware.\n        return \"\" + filename + \".map\";\n    }\n    const url = new URL(pathname, document.location.origin);\n    url.searchParams.set('filename', filename);\n    return url.href;\n} : undefined;\n\n//# sourceMappingURL=app-find-source-map-url.js.map"],"names":[],"mappings":";;;;AAAA,MAAM,WAAW,wCAAsC;AACvD,MAAM,WAAW,KAAK,WAAW;AAC1B,MAAM,mBAAmB,uCAAyC,SAAS,iBAAiB,QAAQ;IACvG,IAAI,aAAa,IAAI;QACjB,OAAO;IACX;IACA,IAAI,SAAS,UAAU,CAAC,SAAS,QAAQ,CAAC,MAAM,KAAK,SAAS,QAAQ,CAAC,kBAAkB;QACrF,kEAAkE;QAClE,mEAAmE;QACnE,qEAAqE;QACrE,mEAAmE;QACnE,qEAAqE;QACrE,4DAA4D;QAC5D,6CAA6C;QAC7C,OAAO,KAAK,WAAW;IAC3B;IACA,MAAM,MAAM,IAAI,IAAI,UAAU,SAAS,QAAQ,CAAC,MAAM;IACtD,IAAI,YAAY,CAAC,GAAG,CAAC,YAAY;IACjC,OAAO,IAAI,IAAI;AACnB,IAAI,yBAEJ,mDAAmD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/segment.js"],"sourcesContent":["export function isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === '(' && segment.endsWith(')');\n}\nexport function isParallelRouteSegment(segment) {\n    return segment.startsWith('@') && segment !== '@children';\n}\nexport function addSearchParamsIfPageSegment(segment, searchParams) {\n    const isPageSegment = segment.includes(PAGE_SEGMENT_KEY);\n    if (isPageSegment) {\n        const stringifiedQuery = JSON.stringify(searchParams);\n        return stringifiedQuery !== '{}' ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery : PAGE_SEGMENT_KEY;\n    }\n    return segment;\n}\nexport const PAGE_SEGMENT_KEY = '__PAGE__';\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__';\n\n//# sourceMappingURL=segment.js.map"],"names":[],"mappings":";;;;;;;;;;;;AAAO,SAAS,eAAe,OAAO;IAClC,sCAAsC;IACtC,OAAO,OAAO,CAAC,EAAE,KAAK,OAAO,QAAQ,QAAQ,CAAC;AAClD;AACO,SAAS,uBAAuB,OAAO;IAC1C,OAAO,QAAQ,UAAU,CAAC,QAAQ,YAAY;AAClD;AACO,SAAS,6BAA6B,OAAO,EAAE,YAAY;IAC9D,MAAM,gBAAgB,QAAQ,QAAQ,CAAC;IACvC,IAAI,eAAe;QACf,MAAM,mBAAmB,KAAK,SAAS,CAAC;QACxC,OAAO,qBAAqB,OAAO,mBAAmB,MAAM,mBAAmB;IACnF;IACA,OAAO;AACX;AACO,MAAM,mBAAmB;AACzB,MAAM,sBAAsB,eAEnC,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/flight-data-helpers.js"],"sourcesContent":["import { PAGE_SEGMENT_KEY } from '../shared/lib/segment';\n// TODO: We should only have to export `normalizeFlightData`, however because the initial flight data\n// that gets passed to `createInitialRouterState` doesn't conform to the `FlightDataPath` type (it's missing the root segment)\n// we're currently exporting it so we can use it directly. This should be fixed as part of the unification of\n// the different ways we express `FlightSegmentPath`.\nexport function getFlightDataPartsFromPath(flightDataPath) {\n    // Pick the last 4 items from the `FlightDataPath` to get the [tree, seedData, viewport, isHeadPartial].\n    const flightDataPathLength = 4;\n    // tree, seedData, and head are *always* the last three items in the `FlightDataPath`.\n    const [tree, seedData, head, isHeadPartial] = flightDataPath.slice(-flightDataPathLength);\n    // The `FlightSegmentPath` is everything except the last three items. For a root render, it won't be present.\n    const segmentPath = flightDataPath.slice(0, -flightDataPathLength);\n    var _segmentPath_;\n    return {\n        // TODO: Unify these two segment path helpers. We are inconsistently pushing an empty segment (\"\")\n        // to the start of the segment path in some places which makes it hard to use solely the segment path.\n        // Look for \"// TODO-APP: remove ''\" in the codebase.\n        pathToSegment: segmentPath.slice(0, -1),\n        segmentPath,\n        // if the `FlightDataPath` corresponds with the root, there'll be no segment path,\n        // in which case we default to ''.\n        segment: (_segmentPath_ = segmentPath[segmentPath.length - 1]) != null ? _segmentPath_ : '',\n        tree,\n        seedData,\n        head,\n        isHeadPartial,\n        isRootRender: flightDataPath.length === flightDataPathLength\n    };\n}\nexport function getNextFlightSegmentPath(flightSegmentPath) {\n    // Since `FlightSegmentPath` is a repeated tuple of `Segment` and `ParallelRouteKey`, we slice off two items\n    // to get the next segment path.\n    return flightSegmentPath.slice(2);\n}\nexport function normalizeFlightData(flightData) {\n    // FlightData can be a string when the server didn't respond with a proper flight response,\n    // or when a redirect happens, to signal to the client that it needs to perform an MPA navigation.\n    if (typeof flightData === 'string') {\n        return flightData;\n    }\n    return flightData.map((flightDataPath)=>getFlightDataPartsFromPath(flightDataPath));\n}\n/**\n * This function is used to prepare the flight router state for the request.\n * It removes markers that are not needed by the server, and are purely used\n * for stashing state on the client.\n * @param flightRouterState - The flight router state to prepare.\n * @param isHmrRefresh - Whether this is an HMR refresh request.\n * @returns The prepared flight router state.\n */ export function prepareFlightRouterStateForRequest(flightRouterState, isHmrRefresh) {\n    // HMR requests need the complete, unmodified state for proper functionality\n    if (isHmrRefresh) {\n        return encodeURIComponent(JSON.stringify(flightRouterState));\n    }\n    return encodeURIComponent(JSON.stringify(stripClientOnlyDataFromFlightRouterState(flightRouterState)));\n}\n/**\n * Recursively strips client-only data from FlightRouterState while preserving\n * server-needed information for proper rendering decisions.\n */ function stripClientOnlyDataFromFlightRouterState(flightRouterState) {\n    const [segment, parallelRoutes, _url, refreshMarker, isRootLayout, hasLoadingBoundary] = flightRouterState;\n    // __PAGE__ segments are always fetched from the server, so there's\n    // no need to send them up\n    const cleanedSegment = stripSearchParamsFromPageSegment(segment);\n    // Recursively process parallel routes\n    const cleanedParallelRoutes = {};\n    for (const [key, childState] of Object.entries(parallelRoutes)){\n        cleanedParallelRoutes[key] = stripClientOnlyDataFromFlightRouterState(childState);\n    }\n    const result = [\n        cleanedSegment,\n        cleanedParallelRoutes,\n        null,\n        shouldPreserveRefreshMarker(refreshMarker) ? refreshMarker : null\n    ];\n    // Append optional fields if present\n    if (isRootLayout !== undefined) {\n        result[4] = isRootLayout;\n    }\n    if (hasLoadingBoundary !== undefined) {\n        result[5] = hasLoadingBoundary;\n    }\n    return result;\n}\n/**\n * Strips search parameters from __PAGE__ segments to prevent sensitive\n * client-side data from being sent to the server.\n */ function stripSearchParamsFromPageSegment(segment) {\n    if (typeof segment === 'string' && segment.startsWith(PAGE_SEGMENT_KEY + '?')) {\n        return PAGE_SEGMENT_KEY;\n    }\n    return segment;\n}\n/**\n * Determines whether the refresh marker should be sent to the server\n * Client-only markers like 'refresh' are stripped, while server-needed markers\n * like 'refetch' and 'inside-shared-layout' are preserved.\n */ function shouldPreserveRefreshMarker(refreshMarker) {\n    return Boolean(refreshMarker && refreshMarker !== 'refresh');\n}\n\n//# sourceMappingURL=flight-data-helpers.js.map"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAKO,SAAS,2BAA2B,cAAc;IACrD,wGAAwG;IACxG,MAAM,uBAAuB;IAC7B,sFAAsF;IACtF,MAAM,CAAC,MAAM,UAAU,MAAM,cAAc,GAAG,eAAe,KAAK,CAAC,CAAC;IACpE,6GAA6G;IAC7G,MAAM,cAAc,eAAe,KAAK,CAAC,GAAG,CAAC;IAC7C,IAAI;IACJ,OAAO;QACH,kGAAkG;QAClG,sGAAsG;QACtG,qDAAqD;QACrD,eAAe,YAAY,KAAK,CAAC,GAAG,CAAC;QACrC;QACA,kFAAkF;QAClF,kCAAkC;QAClC,SAAS,CAAC,gBAAgB,WAAW,CAAC,YAAY,MAAM,GAAG,EAAE,KAAK,OAAO,gBAAgB;QACzF;QACA;QACA;QACA;QACA,cAAc,eAAe,MAAM,KAAK;IAC5C;AACJ;AACO,SAAS,yBAAyB,iBAAiB;IACtD,4GAA4G;IAC5G,gCAAgC;IAChC,OAAO,kBAAkB,KAAK,CAAC;AACnC;AACO,SAAS,oBAAoB,UAAU;IAC1C,2FAA2F;IAC3F,kGAAkG;IAClG,IAAI,OAAO,eAAe,UAAU;QAChC,OAAO;IACX;IACA,OAAO,WAAW,GAAG,CAAC,CAAC,iBAAiB,2BAA2B;AACvE;AAQW,SAAS,mCAAmC,iBAAiB,EAAE,YAAY;IAClF,4EAA4E;IAC5E,IAAI,cAAc;QACd,OAAO,mBAAmB,KAAK,SAAS,CAAC;IAC7C;IACA,OAAO,mBAAmB,KAAK,SAAS,CAAC,yCAAyC;AACtF;AACA;;;CAGC,GAAG,SAAS,yCAAyC,iBAAiB;IACnE,MAAM,CAAC,SAAS,gBAAgB,MAAM,eAAe,cAAc,mBAAmB,GAAG;IACzF,mEAAmE;IACnE,0BAA0B;IAC1B,MAAM,iBAAiB,iCAAiC;IACxD,sCAAsC;IACtC,MAAM,wBAAwB,CAAC;IAC/B,KAAK,MAAM,CAAC,KAAK,WAAW,IAAI,OAAO,OAAO,CAAC,gBAAgB;QAC3D,qBAAqB,CAAC,IAAI,GAAG,yCAAyC;IAC1E;IACA,MAAM,SAAS;QACX;QACA;QACA;QACA,4BAA4B,iBAAiB,gBAAgB;KAChE;IACD,oCAAoC;IACpC,IAAI,iBAAiB,WAAW;QAC5B,MAAM,CAAC,EAAE,GAAG;IAChB;IACA,IAAI,uBAAuB,WAAW;QAClC,MAAM,CAAC,EAAE,GAAG;IAChB;IACA,OAAO;AACX;AACA;;;CAGC,GAAG,SAAS,iCAAiC,OAAO;IACjD,IAAI,OAAO,YAAY,YAAY,QAAQ,UAAU,CAAC,uPAAgB,GAAG,MAAM;QAC3E,OAAO,uPAAgB;IAC3B;IACA,OAAO;AACX;AACA;;;;CAIC,GAAG,SAAS,4BAA4B,aAAa;IAClD,OAAO,QAAQ,iBAAiB,kBAAkB;AACtD,EAEA,+CAA+C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/app-build-id.js"],"sourcesContent":["// This gets assigned as a side-effect during app initialization. Because it\n// represents the build used to create the JS bundle, it should never change\n// after being set, so we store it in a global variable.\n//\n// When performing RSC requests, if the incoming data has a different build ID,\n// we perform an MPA navigation/refresh to load the updated build and ensure\n// that the client and server in sync.\n// Starts as an empty string. In practice, because setAppBuildId is called\n// during initialization before hydration starts, this will always get\n// reassigned to the actual build ID before it's ever needed by a navigation.\n// If for some reasons it didn't, due to a bug or race condition, then on\n// navigation the build comparision would fail and trigger an MPA navigation.\nlet globalBuildId = '';\nexport function setAppBuildId(buildId) {\n    globalBuildId = buildId;\n}\nexport function getAppBuildId() {\n    return globalBuildId;\n}\n\n//# sourceMappingURL=app-build-id.js.map"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,4EAA4E;AAC5E,wDAAwD;AACxD,EAAE;AACF,+EAA+E;AAC/E,4EAA4E;AAC5E,sCAAsC;AACtC,0EAA0E;AAC1E,sEAAsE;AACtE,6EAA6E;AAC7E,yEAAyE;AACzE,6EAA6E;;;;;;;AAC7E,IAAI,gBAAgB;AACb,SAAS,cAAc,OAAO;IACjC,gBAAgB;AACpB;AACO,SAAS;IACZ,OAAO;AACX,EAEA,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/hash.js"],"sourcesContent":["// http://www.cse.yorku.ca/~oz/hash.html\n// More specifically, 32-bit hash via djbxor\n// (ref: https://gist.github.com/eplawless/52813b1d8ad9af510d85?permalink_comment_id=3367765#gistcomment-3367765)\n// This is due to number type differences between rust for turbopack to js number types,\n// where rust does not have easy way to repreesnt js's 53-bit float number type for the matching\n// overflow behavior. This is more `correct` in terms of having canonical hash across different runtime / implementation\n// as can gaurantee determinstic output from 32bit hash.\nexport function djb2Hash(str) {\n    let hash = 5381;\n    for(let i = 0; i < str.length; i++){\n        const char = str.charCodeAt(i);\n        hash = (hash << 5) + hash + char & 0xffffffff;\n    }\n    return hash >>> 0;\n}\nexport function hexHash(str) {\n    return djb2Hash(str).toString(36).slice(0, 5);\n}\n\n//# sourceMappingURL=hash.js.map"],"names":[],"mappings":"AAAA,wCAAwC;AACxC,4CAA4C;AAC5C,iHAAiH;AACjH,wFAAwF;AACxF,gGAAgG;AAChG,wHAAwH;AACxH,wDAAwD;;;;;;;AACjD,SAAS,SAAS,GAAG;IACxB,IAAI,OAAO;IACX,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAI;QAC/B,MAAM,OAAO,IAAI,UAAU,CAAC;QAC5B,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,OAAO;IACvC;IACA,OAAO,SAAS;AACpB;AACO,SAAS,QAAQ,GAAG;IACvB,OAAO,SAAS,KAAK,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG;AAC/C,EAEA,gCAAgC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/router/utils/cache-busting-search-param.js"],"sourcesContent":["import { hexHash } from '../../hash';\nexport function computeCacheBustingSearchParam(prefetchHeader, segmentPrefetchHeader, stateTreeHeader, nextUrlHeader) {\n    if ((prefetchHeader === undefined || prefetchHeader === '0') && segmentPrefetchHeader === undefined && stateTreeHeader === undefined && nextUrlHeader === undefined) {\n        return '';\n    }\n    return hexHash([\n        prefetchHeader || '0',\n        segmentPrefetchHeader || '0',\n        stateTreeHeader || '0',\n        nextUrlHeader || '0'\n    ].join(','));\n}\n\n//# sourceMappingURL=cache-busting-search-param.js.map"],"names":[],"mappings":";;;;AAAA;;AACO,SAAS,+BAA+B,cAAc,EAAE,qBAAqB,EAAE,eAAe,EAAE,aAAa;IAChH,IAAI,CAAC,mBAAmB,aAAa,mBAAmB,GAAG,KAAK,0BAA0B,aAAa,oBAAoB,aAAa,kBAAkB,WAAW;QACjK,OAAO;IACX;IACA,OAAO,IAAA,2OAAO,EAAC;QACX,kBAAkB;QAClB,yBAAyB;QACzB,mBAAmB;QACnB,iBAAiB;KACpB,CAAC,IAAI,CAAC;AACX,EAEA,sDAAsD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/router-reducer/set-cache-busting-search-param.js"],"sourcesContent":["'use client';\nimport { computeCacheBustingSearchParam } from '../../../shared/lib/router/utils/cache-busting-search-param';\nimport { NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_SEGMENT_PREFETCH_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_URL, NEXT_RSC_UNION_QUERY } from '../app-router-headers';\n/**\n * Mutates the provided URL by adding a cache-busting search parameter for CDNs that don't\n * support custom headers. This helps avoid caching conflicts by making each request unique.\n *\n * Rather than relying on the Vary header which some CDNs ignore, we append a search param\n * to create a unique URL that forces a fresh request.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * Note: This function mutates the input URL directly and does not return anything.\n *\n * TODO: Since we need to use a search param anyway, we could simplify by removing the custom\n * headers approach entirely and just use search params.\n */ export const setCacheBustingSearchParam = (url, headers)=>{\n    const uniqueCacheKey = computeCacheBustingSearchParam(headers[NEXT_ROUTER_PREFETCH_HEADER], headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER], headers[NEXT_ROUTER_STATE_TREE_HEADER], headers[NEXT_URL]);\n    setCacheBustingSearchParamWithHash(url, uniqueCacheKey);\n};\n/**\n * Sets a cache-busting search parameter on a URL using a provided hash value.\n *\n * This function performs the same logic as `setCacheBustingSearchParam` but accepts\n * a pre-computed hash instead of computing it from headers.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * hash: \"abc123\"\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * If the hash is null, we will set `_rsc` search param without a value.\n * Like this: https://example.com/path?query=1&_rsc\n *\n * Note: This function mutates the input URL directly and does not return anything.\n */ export const setCacheBustingSearchParamWithHash = (url, hash)=>{\n    /**\n   * Note that we intentionally do not use `url.searchParams.set` here:\n   *\n   * const url = new URL('https://example.com/search?q=custom%20spacing');\n   * url.searchParams.set('_rsc', 'abc123');\n   * console.log(url.toString()); // Outputs: https://example.com/search?q=custom+spacing&_rsc=abc123\n   *                                                                             ^ <--- this is causing confusion\n   * This is in fact intended based on https://url.spec.whatwg.org/#interface-urlsearchparams, but\n   * we want to preserve the %20 as %20 if that's what the user passed in, hence the custom\n   * logic below.\n   */ const existingSearch = url.search;\n    const rawQuery = existingSearch.startsWith('?') ? existingSearch.slice(1) : existingSearch;\n    // Always remove any existing cache busting param and add a fresh one to ensure\n    // we have the correct value based on current request headers\n    const pairs = rawQuery.split('&').filter((pair)=>pair && !pair.startsWith(\"\" + NEXT_RSC_UNION_QUERY + \"=\"));\n    if (hash.length > 0) {\n        pairs.push(NEXT_RSC_UNION_QUERY + \"=\" + hash);\n    } else {\n        pairs.push(\"\" + NEXT_RSC_UNION_QUERY);\n    }\n    url.search = pairs.length ? \"?\" + pairs.join('&') : '';\n};\n\n//# sourceMappingURL=set-cache-busting-search-param.js.map"],"names":[],"mappings":";;;;;;AACA;AACA;AAFA;;;AAkBW,MAAM,6BAA6B,CAAC,KAAK;IAChD,MAAM,iBAAiB,IAAA,oTAA8B,EAAC,OAAO,CAAC,0RAA2B,CAAC,EAAE,OAAO,CAAC,kSAAmC,CAAC,EAAE,OAAO,CAAC,4RAA6B,CAAC,EAAE,OAAO,CAAC,uQAAQ,CAAC;IACnM,mCAAmC,KAAK;AAC5C;AAgBW,MAAM,qCAAqC,CAAC,KAAK;IACxD;;;;;;;;;;GAUD,GAAG,MAAM,iBAAiB,IAAI,MAAM;IACnC,MAAM,WAAW,eAAe,UAAU,CAAC,OAAO,eAAe,KAAK,CAAC,KAAK;IAC5E,+EAA+E;IAC/E,6DAA6D;IAC7D,MAAM,QAAQ,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,OAAO,QAAQ,CAAC,KAAK,UAAU,CAAC,KAAK,mRAAoB,GAAG;IACtG,IAAI,KAAK,MAAM,GAAG,GAAG;QACjB,MAAM,IAAI,CAAC,mRAAoB,GAAG,MAAM;IAC5C,OAAO;QACH,MAAM,IAAI,CAAC,KAAK,mRAAoB;IACxC;IACA,IAAI,MAAM,GAAG,MAAM,MAAM,GAAG,MAAM,MAAM,IAAI,CAAC,OAAO;AACxD,GAEA,0DAA0D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/segment-cache/segment-value-encoding.js"],"sourcesContent":["import { PAGE_SEGMENT_KEY } from '../segment';\nexport const ROOT_SEGMENT_REQUEST_KEY = '';\nexport const ROOT_SEGMENT_CACHE_KEY = '';\nexport function createSegmentRequestKeyPart(segment) {\n    if (typeof segment === 'string') {\n        if (segment.startsWith(PAGE_SEGMENT_KEY)) {\n            // The Flight Router State type sometimes includes the search params in\n            // the page segment. However, the Segment Cache tracks this as a separate\n            // key. So, we strip the search params here, and then add them back when\n            // the cache entry is turned back into a FlightRouterState. This is an\n            // unfortunate consequence of the FlightRouteState being used both as a\n            // transport type and as a cache key; we'll address this once more of the\n            // Segment Cache implementation has settled.\n            // TODO: We should hoist the search params out of the FlightRouterState\n            // type entirely, This is our plan for dynamic route params, too.\n            return PAGE_SEGMENT_KEY;\n        }\n        const safeName = // TODO: FlightRouterState encodes Not Found routes as \"/_not-found\".\n        // But params typically don't include the leading slash. We should use\n        // a different encoding to avoid this special case.\n        segment === '/_not-found' ? '_not-found' : encodeToFilesystemAndURLSafeString(segment);\n        // Since this is not a dynamic segment, it's fully encoded. It does not\n        // need to be \"hydrated\" with a param value.\n        return safeName;\n    }\n    const name = segment[0];\n    const paramType = segment[2];\n    const safeName = encodeToFilesystemAndURLSafeString(name);\n    const encodedName = '$' + paramType + '$' + safeName;\n    return encodedName;\n}\nexport function appendSegmentRequestKeyPart(parentRequestKey, parallelRouteKey, childRequestKeyPart) {\n    // Aside from being filesystem safe, segment keys are also designed so that\n    // each segment and parallel route creates its own subdirectory. Roughly in\n    // the same shape as the source app directory. This is mostly just for easier\n    // debugging (you can open up the build folder and navigate the output); if\n    // we wanted to do we could just use a flat structure.\n    // Omit the parallel route key for children, since this is the most\n    // common case. Saves some bytes (and it's what the app directory does).\n    const slotKey = parallelRouteKey === 'children' ? childRequestKeyPart : \"@\" + encodeToFilesystemAndURLSafeString(parallelRouteKey) + \"/\" + childRequestKeyPart;\n    return parentRequestKey + '/' + slotKey;\n}\nexport function createSegmentCacheKeyPart(requestKeyPart, segment) {\n    if (typeof segment === 'string') {\n        return requestKeyPart;\n    }\n    const paramValue = segment[1];\n    const safeValue = encodeToFilesystemAndURLSafeString(paramValue);\n    return requestKeyPart + '$' + safeValue;\n}\nexport function appendSegmentCacheKeyPart(parentSegmentKey, parallelRouteKey, childCacheKeyPart) {\n    const slotKey = parallelRouteKey === 'children' ? childCacheKeyPart : \"@\" + encodeToFilesystemAndURLSafeString(parallelRouteKey) + \"/\" + childCacheKeyPart;\n    return parentSegmentKey + '/' + slotKey;\n}\n// Define a regex pattern to match the most common characters found in a route\n// param. It excludes anything that might not be cross-platform filesystem\n// compatible, like |. It does not need to be precise because the fallback is to\n// just base64url-encode the whole parameter, which is fine; we just don't do it\n// by default for compactness, and for easier debugging.\nconst simpleParamValueRegex = /^[a-zA-Z0-9\\-_@]+$/;\nfunction encodeToFilesystemAndURLSafeString(value) {\n    if (simpleParamValueRegex.test(value)) {\n        return value;\n    }\n    // If there are any unsafe characters, base64url-encode the entire value.\n    // We also add a ! prefix so it doesn't collide with the simple case.\n    const base64url = btoa(value).replace(/\\+/g, '-') // Replace '+' with '-'\n    .replace(/\\//g, '_') // Replace '/' with '_'\n    .replace(/=+$/, '') // Remove trailing '='\n    ;\n    return '!' + base64url;\n}\nexport function convertSegmentPathToStaticExportFilename(segmentPath) {\n    return \"__next\" + segmentPath.replace(/\\//g, '.') + \".txt\";\n}\n\n//# sourceMappingURL=segment-value-encoding.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACO,MAAM,2BAA2B;AACjC,MAAM,yBAAyB;AAC/B,SAAS,4BAA4B,OAAO;IAC/C,IAAI,OAAO,YAAY,UAAU;QAC7B,IAAI,QAAQ,UAAU,CAAC,uPAAgB,GAAG;YACtC,uEAAuE;YACvE,yEAAyE;YACzE,wEAAwE;YACxE,sEAAsE;YACtE,uEAAuE;YACvE,yEAAyE;YACzE,4CAA4C;YAC5C,uEAAuE;YACvE,iEAAiE;YACjE,OAAO,uPAAgB;QAC3B;QACA,MAAM,WACN,sEAAsE;QACtE,mDAAmD;QACnD,YAAY,gBAAgB,eAAe,mCAAmC;QAC9E,uEAAuE;QACvE,4CAA4C;QAC5C,OAAO;IACX;IACA,MAAM,OAAO,OAAO,CAAC,EAAE;IACvB,MAAM,YAAY,OAAO,CAAC,EAAE;IAC5B,MAAM,WAAW,mCAAmC;IACpD,MAAM,cAAc,MAAM,YAAY,MAAM;IAC5C,OAAO;AACX;AACO,SAAS,4BAA4B,gBAAgB,EAAE,gBAAgB,EAAE,mBAAmB;IAC/F,2EAA2E;IAC3E,2EAA2E;IAC3E,6EAA6E;IAC7E,2EAA2E;IAC3E,sDAAsD;IACtD,mEAAmE;IACnE,wEAAwE;IACxE,MAAM,UAAU,qBAAqB,aAAa,sBAAsB,MAAM,mCAAmC,oBAAoB,MAAM;IAC3I,OAAO,mBAAmB,MAAM;AACpC;AACO,SAAS,0BAA0B,cAAc,EAAE,OAAO;IAC7D,IAAI,OAAO,YAAY,UAAU;QAC7B,OAAO;IACX;IACA,MAAM,aAAa,OAAO,CAAC,EAAE;IAC7B,MAAM,YAAY,mCAAmC;IACrD,OAAO,iBAAiB,MAAM;AAClC;AACO,SAAS,0BAA0B,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB;IAC3F,MAAM,UAAU,qBAAqB,aAAa,oBAAoB,MAAM,mCAAmC,oBAAoB,MAAM;IACzI,OAAO,mBAAmB,MAAM;AACpC;AACA,8EAA8E;AAC9E,0EAA0E;AAC1E,gFAAgF;AAChF,gFAAgF;AAChF,wDAAwD;AACxD,MAAM,wBAAwB;AAC9B,SAAS,mCAAmC,KAAK;IAC7C,IAAI,sBAAsB,IAAI,CAAC,QAAQ;QACnC,OAAO;IACX;IACA,yEAAyE;IACzE,qEAAqE;IACrE,MAAM,YAAY,KAAK,OAAO,OAAO,CAAC,OAAO,KAAK,uBAAuB;KACxE,OAAO,CAAC,OAAO,KAAK,uBAAuB;KAC3C,OAAO,CAAC,OAAO,IAAI,sBAAsB;;IAE1C,OAAO,MAAM;AACjB;AACO,SAAS,yCAAyC,WAAW;IAChE,OAAO,WAAW,YAAY,OAAO,CAAC,OAAO,OAAO;AACxD,EAEA,kDAAkD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/route-params.js"],"sourcesContent":["import { addSearchParamsIfPageSegment, DEFAULT_SEGMENT_KEY, PAGE_SEGMENT_KEY } from '../shared/lib/segment';\nimport { ROOT_SEGMENT_REQUEST_KEY } from '../shared/lib/segment-cache/segment-value-encoding';\nimport { NEXT_REWRITTEN_PATH_HEADER, NEXT_REWRITTEN_QUERY_HEADER, NEXT_RSC_UNION_QUERY } from './components/app-router-headers';\nexport function getRenderedSearch(response) {\n    // If the server performed a rewrite, the search params used to render the\n    // page will be different from the params in the request URL. In this case,\n    // the response will include a header that gives the rewritten search query.\n    const rewrittenQuery = response.headers.get(NEXT_REWRITTEN_QUERY_HEADER);\n    if (rewrittenQuery !== null) {\n        return rewrittenQuery === '' ? '' : '?' + rewrittenQuery;\n    }\n    // If the header is not present, there was no rewrite, so we use the search\n    // query of the response URL.\n    return urlToUrlWithoutFlightMarker(new URL(response.url)).search;\n}\nexport function getRenderedPathname(response) {\n    // If the server performed a rewrite, the pathname used to render the\n    // page will be different from the pathname in the request URL. In this case,\n    // the response will include a header that gives the rewritten pathname.\n    const rewrittenPath = response.headers.get(NEXT_REWRITTEN_PATH_HEADER);\n    return rewrittenPath != null ? rewrittenPath : urlToUrlWithoutFlightMarker(new URL(response.url)).pathname;\n}\nexport function parseDynamicParamFromURLPart(paramType, pathnameParts, partIndex) {\n    // This needs to match the behavior in get-dynamic-param.ts.\n    switch(paramType){\n        // Catchalls\n        case 'c':\n        case 'ci':\n            {\n                // Catchalls receive all the remaining URL parts. If there are no\n                // remaining pathname parts, return an empty array.\n                return partIndex < pathnameParts.length ? pathnameParts.slice(partIndex).map((s)=>encodeURIComponent(s)) : [];\n            }\n        // Optional catchalls\n        case 'oc':\n            {\n                // Optional catchalls receive all the remaining URL parts, unless this is\n                // the end of the pathname, in which case they return null.\n                return partIndex < pathnameParts.length ? pathnameParts.slice(partIndex).map((s)=>encodeURIComponent(s)) : null;\n            }\n        // Dynamic\n        case 'd':\n        case 'di':\n            {\n                if (partIndex >= pathnameParts.length) {\n                    // The route tree expected there to be more parts in the URL than there\n                    // actually are. This could happen if the x-nextjs-rewritten-path header\n                    // is incorrectly set, or potentially due to bug in Next.js. TODO:\n                    // Should this be a hard error? During a prefetch, we can just abort.\n                    // During a client navigation, we could trigger a hard refresh. But if\n                    // it happens during initial render, we don't really have any\n                    // recovery options.\n                    return '';\n                }\n                return encodeURIComponent(pathnameParts[partIndex]);\n            }\n        default:\n            paramType;\n            return '';\n    }\n}\nexport function doesStaticSegmentAppearInURL(segment) {\n    // This is not a parameterized segment; however, we need to determine\n    // whether or not this segment appears in the URL. For example, this route\n    // groups do not appear in the URL, so they should be skipped. Any other\n    // special cases must be handled here.\n    // TODO: Consider encoding this directly into the router tree instead of\n    // inferring it on the client based on the segment type. Something like\n    // a `doesAppearInURL` flag in FlightRouterState.\n    if (segment === ROOT_SEGMENT_REQUEST_KEY || // For some reason, the loader tree sometimes includes extra __PAGE__\n    // \"layouts\" when part of a parallel route. But it's not a leaf node.\n    // Otherwise, we wouldn't need this special case because pages are\n    // always leaf nodes.\n    // TODO: Investigate why the loader produces these fake page segments.\n    segment.startsWith(PAGE_SEGMENT_KEY) || // Route groups.\n    segment[0] === '(' && segment.endsWith(')') || segment === DEFAULT_SEGMENT_KEY || segment === '/_not-found') {\n        return false;\n    } else {\n        // All other segment types appear in the URL\n        return true;\n    }\n}\nexport function getCacheKeyForDynamicParam(paramValue, renderedSearch) {\n    // This needs to match the logic in get-dynamic-param.ts, until we're able to\n    // unify the various implementations so that these are always computed on\n    // the client.\n    if (typeof paramValue === 'string') {\n        // TODO: Refactor or remove this helper function to accept a string rather\n        // than the whole segment type. Also we can probably just append the\n        // search string instead of turning it into JSON.\n        const pageSegmentWithSearchParams = addSearchParamsIfPageSegment(paramValue, Object.fromEntries(new URLSearchParams(renderedSearch)));\n        return pageSegmentWithSearchParams;\n    } else if (paramValue === null) {\n        return '';\n    } else {\n        return paramValue.join('/');\n    }\n}\nexport function urlToUrlWithoutFlightMarker(url) {\n    const urlWithoutFlightParameters = new URL(url);\n    urlWithoutFlightParameters.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    if (process.env.NODE_ENV === 'production') {\n        if (process.env.__NEXT_CONFIG_OUTPUT === 'export' && urlWithoutFlightParameters.pathname.endsWith('.txt')) {\n            const { pathname } = urlWithoutFlightParameters;\n            const length = pathname.endsWith('/index.txt') ? 10 : 4;\n            // Slice off `/index.txt` or `.txt` from the end of the pathname\n            urlWithoutFlightParameters.pathname = pathname.slice(0, -length);\n        }\n    }\n    return urlWithoutFlightParameters;\n}\nexport function getParamValueFromCacheKey(paramCacheKey, paramType) {\n    // Turn the cache key string sent by the server (as part of FlightRouterState)\n    // into a value that can be passed to `useParams` and client components.\n    const isCatchAll = paramType === 'c' || paramType === 'oc';\n    if (isCatchAll) {\n        // Catch-all param keys are a concatenation of the path segments.\n        // See equivalent logic in `getSelectedParams`.\n        // TODO: We should just pass the array directly, rather than concatenate\n        // it to a string and then split it back to an array. It needs to be an\n        // array in some places, like when passing a key React, but we can convert\n        // it at runtime in those places.\n        return paramCacheKey.split('/');\n    }\n    return paramCacheKey;\n}\n\n//# sourceMappingURL=route-params.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js"],"sourcesContent":["'use client';\n// TODO: Explicitly import from client.browser\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { createFromReadableStream as createFromReadableStreamBrowser } from 'react-server-dom-webpack/client';\nimport { NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_RSC_UNION_QUERY, NEXT_URL, RSC_HEADER, RSC_CONTENT_TYPE_HEADER, NEXT_HMR_REFRESH_HEADER, NEXT_DID_POSTPONE_HEADER, NEXT_ROUTER_STALE_TIME_HEADER } from '../app-router-headers';\nimport { callServer } from '../../app-call-server';\nimport { findSourceMapURL } from '../../app-find-source-map-url';\nimport { PrefetchKind } from './router-reducer-types';\nimport { normalizeFlightData, prepareFlightRouterStateForRequest } from '../../flight-data-helpers';\nimport { getAppBuildId } from '../../app-build-id';\nimport { setCacheBustingSearchParam } from './set-cache-busting-search-param';\nimport { urlToUrlWithoutFlightMarker } from '../../route-params';\nconst createFromReadableStream = createFromReadableStreamBrowser;\nfunction doMpaNavigation(url) {\n    return {\n        flightData: urlToUrlWithoutFlightMarker(new URL(url, location.origin)).toString(),\n        canonicalUrl: undefined,\n        couldBeIntercepted: false,\n        prerendered: false,\n        postponed: false,\n        staleTime: -1\n    };\n}\nlet abortController = new AbortController();\nif (typeof window !== 'undefined') {\n    // Abort any in-flight requests when the page is unloaded, e.g. due to\n    // reloading the page or performing hard navigations. This allows us to ignore\n    // what would otherwise be a thrown TypeError when the browser cancels the\n    // requests.\n    window.addEventListener('pagehide', ()=>{\n        abortController.abort();\n    });\n    // Use a fresh AbortController instance on pageshow, e.g. when navigating back\n    // and the JavaScript execution context is restored by the browser.\n    window.addEventListener('pageshow', ()=>{\n        abortController = new AbortController();\n    });\n}\n/**\n * Fetch the flight data for the provided url. Takes in the current router state\n * to decide what to render server-side.\n */ export async function fetchServerResponse(url, options) {\n    const { flightRouterState, nextUrl, prefetchKind } = options;\n    const headers = {\n        // Enable flight response\n        [RSC_HEADER]: '1',\n        // Provide the current router state\n        [NEXT_ROUTER_STATE_TREE_HEADER]: prepareFlightRouterStateForRequest(flightRouterState, options.isHmrRefresh)\n    };\n    /**\n   * Three cases:\n   * - `prefetchKind` is `undefined`, it means it's a normal navigation, so we want to prefetch the page data fully\n   * - `prefetchKind` is `full` - we want to prefetch the whole page so same as above\n   * - `prefetchKind` is `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully\n   */ if (prefetchKind === PrefetchKind.AUTO) {\n        headers[NEXT_ROUTER_PREFETCH_HEADER] = '1';\n    }\n    if (process.env.NODE_ENV === 'development' && options.isHmrRefresh) {\n        headers[NEXT_HMR_REFRESH_HEADER] = '1';\n    }\n    if (nextUrl) {\n        headers[NEXT_URL] = nextUrl;\n    }\n    try {\n        var _res_headers_get;\n        // When creating a \"temporary\" prefetch (the \"on-demand\" prefetch that gets created on navigation, if one doesn't exist)\n        // we send the request with a \"high\" priority as it's in response to a user interaction that could be blocking a transition.\n        // Otherwise, all other prefetches are sent with a \"low\" priority.\n        // We use \"auto\" for in all other cases to match the existing default, as this function is shared outside of prefetching.\n        const fetchPriority = prefetchKind ? prefetchKind === PrefetchKind.TEMPORARY ? 'high' : 'low' : 'auto';\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n                // In \"output: export\" mode, we can't rely on headers to distinguish\n                // between HTML and RSC requests. Instead, we append an extra prefix\n                // to the request.\n                url = new URL(url);\n                if (url.pathname.endsWith('/')) {\n                    url.pathname += 'index.txt';\n                } else {\n                    url.pathname += '.txt';\n                }\n            }\n        }\n        const res = await createFetch(url, headers, fetchPriority, abortController.signal);\n        const responseUrl = urlToUrlWithoutFlightMarker(new URL(res.url));\n        const canonicalUrl = res.redirected ? responseUrl : undefined;\n        const contentType = res.headers.get('content-type') || '';\n        const interception = !!((_res_headers_get = res.headers.get('vary')) == null ? void 0 : _res_headers_get.includes(NEXT_URL));\n        const postponed = !!res.headers.get(NEXT_DID_POSTPONE_HEADER);\n        const staleTimeHeaderSeconds = res.headers.get(NEXT_ROUTER_STALE_TIME_HEADER);\n        const staleTime = staleTimeHeaderSeconds !== null ? parseInt(staleTimeHeaderSeconds, 10) * 1000 : -1;\n        let isFlightResponse = contentType.startsWith(RSC_CONTENT_TYPE_HEADER);\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n                if (!isFlightResponse) {\n                    isFlightResponse = contentType.startsWith('text/plain');\n                }\n            }\n        }\n        // If fetch returns something different than flight response handle it like a mpa navigation\n        // If the fetch was not 200, we also handle it like a mpa navigation\n        if (!isFlightResponse || !res.ok || !res.body) {\n            // in case the original URL came with a hash, preserve it before redirecting to the new URL\n            if (url.hash) {\n                responseUrl.hash = url.hash;\n            }\n            return doMpaNavigation(responseUrl.toString());\n        }\n        // We may navigate to a page that requires a different Webpack runtime.\n        // In prod, every page will have the same Webpack runtime.\n        // In dev, the Webpack runtime is minimal for each page.\n        // We need to ensure the Webpack runtime is updated before executing client-side JS of the new page.\n        if (process.env.NODE_ENV !== 'production' && !process.env.TURBOPACK) {\n            await require('../../dev/hot-reloader/app/hot-reloader-app').waitForWebpackRuntimeHotUpdate();\n        }\n        // Handle the `fetch` readable stream that can be unwrapped by `React.use`.\n        const flightStream = postponed ? createUnclosingPrefetchStream(res.body) : res.body;\n        const response = await createFromNextReadableStream(flightStream);\n        if (getAppBuildId() !== response.b) {\n            return doMpaNavigation(res.url);\n        }\n        return {\n            flightData: normalizeFlightData(response.f),\n            canonicalUrl: canonicalUrl,\n            couldBeIntercepted: interception,\n            prerendered: response.S,\n            postponed,\n            staleTime\n        };\n    } catch (err) {\n        if (!abortController.signal.aborted) {\n            console.error(\"Failed to fetch RSC payload for \" + url + \". Falling back to browser navigation.\", err);\n        }\n        // If fetch fails handle it like a mpa navigation\n        // TODO-APP: Add a test for the case where a CORS request fails, e.g. external url redirect coming from the response.\n        // See https://github.com/vercel/next.js/issues/43605#issuecomment-1451617521 for a reproduction.\n        return {\n            flightData: url.toString(),\n            canonicalUrl: undefined,\n            couldBeIntercepted: false,\n            prerendered: false,\n            postponed: false,\n            staleTime: -1\n        };\n    }\n}\nexport async function createFetch(url, headers, fetchPriority, signal) {\n    // TODO: In output: \"export\" mode, the headers do nothing. Omit them (and the\n    // cache busting search param) from the request so they're\n    // maximally cacheable.\n    if (process.env.__NEXT_TEST_MODE && fetchPriority !== null) {\n        headers['Next-Test-Fetch-Priority'] = fetchPriority;\n    }\n    if (process.env.NEXT_DEPLOYMENT_ID) {\n        headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID;\n    }\n    const fetchOptions = {\n        // Backwards compat for older browsers. `same-origin` is the default in modern browsers.\n        credentials: 'same-origin',\n        headers,\n        priority: fetchPriority || undefined,\n        signal\n    };\n    // `fetchUrl` is slightly different from `url` because we add a cache-busting\n    // search param to it. This should not leak outside of this function, so we\n    // track them separately.\n    let fetchUrl = new URL(url);\n    setCacheBustingSearchParam(fetchUrl, headers);\n    let browserResponse = await fetch(fetchUrl, fetchOptions);\n    // If the server responds with a redirect (e.g. 307), and the redirected\n    // location does not contain the cache busting search param set in the\n    // original request, the response is likely invalid — when following the\n    // redirect, the browser forwards the request headers, but since the cache\n    // busting search param is missing, the server will reject the request due to\n    // a mismatch.\n    //\n    // Ideally, we would be able to intercept the redirect response and perform it\n    // manually, instead of letting the browser automatically follow it, but this\n    // is not allowed by the fetch API.\n    //\n    // So instead, we must \"replay\" the redirect by fetching the new location\n    // again, but this time we'll append the cache busting search param to prevent\n    // a mismatch.\n    //\n    // TODO: We can optimize Next.js's built-in middleware APIs by returning a\n    // custom status code, to prevent the browser from automatically following it.\n    //\n    // This does not affect Server Action-based redirects; those are encoded\n    // differently, as part of the Flight body. It only affects redirects that\n    // occur in a middleware or a third-party proxy.\n    let redirected = browserResponse.redirected;\n    if (process.env.__NEXT_CLIENT_VALIDATE_RSC_REQUEST_HEADERS) {\n        // This is to prevent a redirect loop. Same limit used by Chrome.\n        const MAX_REDIRECTS = 20;\n        for(let n = 0; n < MAX_REDIRECTS; n++){\n            if (!browserResponse.redirected) {\n                break;\n            }\n            const responseUrl = new URL(browserResponse.url, fetchUrl);\n            if (responseUrl.origin !== fetchUrl.origin) {\n                break;\n            }\n            if (responseUrl.searchParams.get(NEXT_RSC_UNION_QUERY) === fetchUrl.searchParams.get(NEXT_RSC_UNION_QUERY)) {\n                break;\n            }\n            // The RSC request was redirected. Assume the response is invalid.\n            //\n            // Append the cache busting search param to the redirected URL and\n            // fetch again.\n            fetchUrl = new URL(responseUrl);\n            setCacheBustingSearchParam(fetchUrl, headers);\n            browserResponse = await fetch(fetchUrl, fetchOptions);\n            // We just performed a manual redirect, so this is now true.\n            redirected = true;\n        }\n    }\n    // Remove the cache busting search param from the response URL, to prevent it\n    // from leaking outside of this function.\n    const responseUrl = new URL(browserResponse.url, fetchUrl);\n    responseUrl.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    const rscResponse = {\n        url: responseUrl.href,\n        // This is true if any redirects occurred, either automatically by the\n        // browser, or manually by us. So it's different from\n        // `browserResponse.redirected`, which only tells us whether the browser\n        // followed a redirect, and only for the last response in the chain.\n        redirected,\n        // These can be copied from the last browser response we received. We\n        // intentionally only expose the subset of fields that are actually used\n        // elsewhere in the codebase.\n        ok: browserResponse.ok,\n        headers: browserResponse.headers,\n        body: browserResponse.body,\n        status: browserResponse.status\n    };\n    return rscResponse;\n}\nexport function createFromNextReadableStream(flightStream) {\n    return createFromReadableStream(flightStream, {\n        callServer,\n        findSourceMapURL\n    });\n}\nfunction createUnclosingPrefetchStream(originalFlightStream) {\n    // When PPR is enabled, prefetch streams may contain references that never\n    // resolve, because that's how we encode dynamic data access. In the decoded\n    // object returned by the Flight client, these are reified into hanging\n    // promises that suspend during render, which is effectively what we want.\n    // The UI resolves when it switches to the dynamic data stream\n    // (via useDeferredValue(dynamic, static)).\n    //\n    // However, the Flight implementation currently errors if the server closes\n    // the response before all the references are resolved. As a cheat to work\n    // around this, we wrap the original stream in a new stream that never closes,\n    // and therefore doesn't error.\n    const reader = originalFlightStream.getReader();\n    return new ReadableStream({\n        async pull (controller) {\n            while(true){\n                const { done, value } = await reader.read();\n                if (!done) {\n                    // Pass to the target stream and keep consuming the Flight response\n                    // from the server.\n                    controller.enqueue(value);\n                    continue;\n                }\n                // The server stream has closed. Exit, but intentionally do not close\n                // the target stream.\n                return;\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=fetch-server-response.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 902, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/navigation-untracked.js"],"sourcesContent":["import { useContext } from 'react';\nimport { PathnameContext } from '../../shared/lib/hooks-client-context.shared-runtime';\n/**\n * This checks to see if the current render has any unknown route parameters.\n * It's used to trigger a different render path in the error boundary.\n *\n * @returns true if there are any unknown route parameters, false otherwise\n */ function hasFallbackRouteParams() {\n    if (typeof window === 'undefined') {\n        // AsyncLocalStorage should not be included in the client bundle.\n        const { workUnitAsyncStorage } = require('../../server/app-render/work-unit-async-storage.external');\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (!workUnitStore) return false;\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n                const fallbackParams = workUnitStore.fallbackRouteParams;\n                return fallbackParams ? fallbackParams.size > 0 : false;\n            case 'prerender-legacy':\n            case 'request':\n            case 'prerender-runtime':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n        return false;\n    }\n    return false;\n}\n/**\n * This returns a `null` value if there are any unknown route parameters, and\n * otherwise returns the pathname from the context. This is an alternative to\n * `usePathname` that is used in the error boundary to avoid rendering the\n * error boundary when there are unknown route parameters. This doesn't throw\n * when accessed with unknown route parameters.\n *\n * @returns\n *\n * @internal\n */ export function useUntrackedPathname() {\n    // If there are any unknown route parameters we would typically throw\n    // an error, but this internal method allows us to return a null value instead\n    // for components that do not propagate the pathname to the static shell (like\n    // the error boundary).\n    if (hasFallbackRouteParams()) {\n        return null;\n    }\n    // This shouldn't cause any issues related to conditional rendering because\n    // the environment will be consistent for the render.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useContext(PathnameContext);\n}\n\n//# sourceMappingURL=navigation-untracked.js.map"],"names":[],"mappings":";;;;AAAA;AACA;;;AACA;;;;;CAKC,GAAG,SAAS;IACT,wCAAmC;QAC/B,iEAAiE;QACjE,MAAM,EAAE,oBAAoB,EAAE;;;;;QAC9B,MAAM,gBAAgB,qBAAqB,QAAQ;QACnD,IAAI,CAAC,eAAe,OAAO;QAC3B,OAAO,cAAc,IAAI;YACrB,KAAK;YACL,KAAK;YACL,KAAK;gBACD,MAAM,iBAAiB,cAAc,mBAAmB;gBACxD,OAAO,iBAAiB,eAAe,IAAI,GAAG,IAAI;YACtD,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBACD;YACJ;gBACI;QACR;QACA,OAAO;IACX;;;AAEJ;AAWW,SAAS;IAChB,qEAAqE;IACrE,8EAA8E;IAC9E,8EAA8E;IAC9E,uBAAuB;IACvB,IAAI,0BAA0B;QAC1B,OAAO;IACX;IACA,2EAA2E;IAC3E,qDAAqD;IACrD,sDAAsD;IACtD,OAAO,IAAA,uRAAU,EAAC,sTAAe;AACrC,EAEA,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 963, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/http-access-fallback/http-access-fallback.js"],"sourcesContent":["export const HTTPAccessErrorStatus = {\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    UNAUTHORIZED: 401\n};\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus));\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK';\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */ export function isHTTPAccessFallbackError(error) {\n    if (typeof error !== 'object' || error === null || !('digest' in error) || typeof error.digest !== 'string') {\n        return false;\n    }\n    const [prefix, httpStatus] = error.digest.split(';');\n    return prefix === HTTP_ERROR_FALLBACK_ERROR_CODE && ALLOWED_CODES.has(Number(httpStatus));\n}\nexport function getAccessFallbackHTTPStatus(error) {\n    const httpStatus = error.digest.split(';')[1];\n    return Number(httpStatus);\n}\nexport function getAccessFallbackErrorTypeByStatus(status) {\n    switch(status){\n        case 401:\n            return 'unauthorized';\n        case 403:\n            return 'forbidden';\n        case 404:\n            return 'not-found';\n        default:\n            return;\n    }\n}\n\n//# sourceMappingURL=http-access-fallback.js.map"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,wBAAwB;IACjC,WAAW;IACX,WAAW;IACX,cAAc;AAClB;AACA,MAAM,gBAAgB,IAAI,IAAI,OAAO,MAAM,CAAC;AACrC,MAAM,iCAAiC;AAOnC,SAAS,0BAA0B,KAAK;IAC/C,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,CAAC,CAAC,YAAY,KAAK,KAAK,OAAO,MAAM,MAAM,KAAK,UAAU;QACzG,OAAO;IACX;IACA,MAAM,CAAC,QAAQ,WAAW,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC;IAChD,OAAO,WAAW,kCAAkC,cAAc,GAAG,CAAC,OAAO;AACjF;AACO,SAAS,4BAA4B,KAAK;IAC7C,MAAM,aAAa,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAC7C,OAAO,OAAO;AAClB;AACO,SAAS,mCAAmC,MAAM;IACrD,OAAO;QACH,KAAK;YACD,OAAO;QACX,KAAK;YACD,OAAO;QACX,KAAK;YACD,OAAO;QACX;YACI;IACR;AACJ,EAEA,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/redirect-status-code.js"],"sourcesContent":["export var RedirectStatusCode = /*#__PURE__*/ function(RedirectStatusCode) {\n    RedirectStatusCode[RedirectStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n    RedirectStatusCode[RedirectStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    RedirectStatusCode[RedirectStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    return RedirectStatusCode;\n}({});\n\n//# sourceMappingURL=redirect-status-code.js.map"],"names":[],"mappings":";;;;AAAO,IAAI,qBAAqB,WAAW,GAAG,SAAS,kBAAkB;IACrE,kBAAkB,CAAC,kBAAkB,CAAC,WAAW,GAAG,IAAI,GAAG;IAC3D,kBAAkB,CAAC,kBAAkB,CAAC,oBAAoB,GAAG,IAAI,GAAG;IACpE,kBAAkB,CAAC,kBAAkB,CAAC,oBAAoB,GAAG,IAAI,GAAG;IACpE,OAAO;AACX,EAAE,CAAC,IAEH,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1023, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/redirect-error.js"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code';\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT';\nexport var RedirectType = /*#__PURE__*/ function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n    return RedirectType;\n}({});\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */ export function isRedirectError(error) {\n    if (typeof error !== 'object' || error === null || !('digest' in error) || typeof error.digest !== 'string') {\n        return false;\n    }\n    const digest = error.digest.split(';');\n    const [errorCode, type] = digest;\n    const destination = digest.slice(2, -2).join(';');\n    const status = digest.at(-2);\n    const statusCode = Number(status);\n    return errorCode === REDIRECT_ERROR_CODE && (type === 'replace' || type === 'push') && typeof destination === 'string' && !isNaN(statusCode) && statusCode in RedirectStatusCode;\n}\n\n//# sourceMappingURL=redirect-error.js.map"],"names":[],"mappings":";;;;;;;;AAAA;;AACO,MAAM,sBAAsB;AAC5B,IAAI,eAAe,WAAW,GAAG,SAAS,YAAY;IACzD,YAAY,CAAC,OAAO,GAAG;IACvB,YAAY,CAAC,UAAU,GAAG;IAC1B,OAAO;AACX,EAAE,CAAC;AAOQ,SAAS,gBAAgB,KAAK;IACrC,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,CAAC,CAAC,YAAY,KAAK,KAAK,OAAO,MAAM,MAAM,KAAK,UAAU;QACzG,OAAO;IACX;IACA,MAAM,SAAS,MAAM,MAAM,CAAC,KAAK,CAAC;IAClC,MAAM,CAAC,WAAW,KAAK,GAAG;IAC1B,MAAM,cAAc,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IAC7C,MAAM,SAAS,OAAO,EAAE,CAAC,CAAC;IAC1B,MAAM,aAAa,OAAO;IAC1B,OAAO,cAAc,uBAAuB,CAAC,SAAS,aAAa,SAAS,MAAM,KAAK,OAAO,gBAAgB,YAAY,CAAC,MAAM,eAAe,cAAc,mRAAkB;AACpL,EAEA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1054, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/is-next-router-error.js"],"sourcesContent":["import { isHTTPAccessFallbackError } from './http-access-fallback/http-access-fallback';\nimport { isRedirectError } from './redirect-error';\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */ export function isNextRouterError(error) {\n    return isRedirectError(error) || isHTTPAccessFallbackError(error);\n}\n\n//# sourceMappingURL=is-next-router-error.js.map"],"names":[],"mappings":";;;;AAAA;AACA;;;AAKW,SAAS,kBAAkB,KAAK;IACvC,OAAO,IAAA,uQAAe,EAAC,UAAU,IAAA,wTAAyB,EAAC;AAC/D,EAEA,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/router-reducer/create-href-from-url.js"],"sourcesContent":["export function createHrefFromUrl(url, includeHash) {\n    if (includeHash === void 0) includeHash = true;\n    return url.pathname + url.search + (includeHash ? url.hash : '');\n}\n\n//# sourceMappingURL=create-href-from-url.js.map"],"names":[],"mappings":";;;;AAAO,SAAS,kBAAkB,GAAG,EAAE,WAAW;IAC9C,IAAI,gBAAgB,KAAK,GAAG,cAAc;IAC1C,OAAO,IAAI,QAAQ,GAAG,IAAI,MAAM,GAAG,CAAC,cAAc,IAAI,IAAI,GAAG,EAAE;AACnE,EAEA,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1081, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/nav-failure-handler.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url';\nexport function handleHardNavError(error) {\n    if (error && typeof window !== 'undefined' && window.next.__pendingUrl && createHrefFromUrl(new URL(window.location.href)) !== createHrefFromUrl(window.next.__pendingUrl)) {\n        console.error(\"Error occurred during navigation, falling back to hard navigation\", error);\n        window.location.href = window.next.__pendingUrl.toString();\n        return true;\n    }\n    return false;\n}\nexport function useNavFailureHandler() {\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n        // this if is only for DCE of the feature flag not conditional\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(()=>{\n            const uncaughtExceptionHandler = (evt)=>{\n                const error = 'reason' in evt ? evt.reason : evt.error;\n                // if we have an unhandled exception/rejection during\n                // a navigation we fall back to a hard navigation to\n                // attempt recovering to a good state\n                handleHardNavError(error);\n            };\n            window.addEventListener('unhandledrejection', uncaughtExceptionHandler);\n            window.addEventListener('error', uncaughtExceptionHandler);\n            return ()=>{\n                window.removeEventListener('error', uncaughtExceptionHandler);\n                window.removeEventListener('unhandledrejection', uncaughtExceptionHandler);\n            };\n        }, []);\n    }\n}\n\n//# sourceMappingURL=nav-failure-handler.js.map"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACO,SAAS,mBAAmB,KAAK;IACpC,IAAI,SAAS,gBAAkB,eAAe,OAAO,IAAI,CAAC,YAAY,IAAI,IAAA,0SAAiB,EAAC,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI,OAAO,IAAA,0SAAiB,EAAC,OAAO,IAAI,CAAC,YAAY;;IAKzK,OAAO;AACX;AACO,SAAS;IACZ;;AAmBJ,EAEA,+CAA+C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1104, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/handle-isr-error.js"],"sourcesContent":["const workAsyncStorage = typeof window === 'undefined' ? require('../../server/app-render/work-async-storage.external').workAsyncStorage : undefined;\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nexport function HandleISRError(param) {\n    let { error } = param;\n    if (workAsyncStorage) {\n        const store = workAsyncStorage.getStore();\n        if ((store == null ? void 0 : store.isRevalidate) || (store == null ? void 0 : store.isStaticGeneration)) {\n            console.error(error);\n            throw error;\n        }\n    }\n    return null;\n}\n\n//# sourceMappingURL=handle-isr-error.js.map"],"names":[],"mappings":";;;;AAAA,MAAM,mBAAmB,uCAAgC;;;;KAA+D,gBAAgB,GAAG;AAIpI,SAAS,eAAe,KAAK;IAChC,IAAI,EAAE,KAAK,EAAE,GAAG;IAChB,IAAI,kBAAkB;QAClB,MAAM,QAAQ,iBAAiB,QAAQ;QACvC,IAAI,CAAC,SAAS,OAAO,KAAK,IAAI,MAAM,YAAY,KAAK,CAAC,SAAS,OAAO,KAAK,IAAI,MAAM,kBAAkB,GAAG;YACtG,QAAQ,KAAK,CAAC;YACd,MAAM;QACV;IACJ;IACA,OAAO;AACX,EAEA,4CAA4C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/router/utils/html-bots.js"],"sourcesContent":["// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\n// Note: The pattern [\\w-]+-Google captures all Google crawlers with \"-Google\" suffix (e.g., Mediapartners-Google, AdsBot-Google, Storebot-Google)\n// as well as crawlers starting with \"Google-\" (e.g., Google-PageRenderer, Google-InspectionTool)\nexport const HTML_LIMITED_BOT_UA_RE = /[\\w-]+-Google|Google-[\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight/i;\n\n//# sourceMappingURL=html-bots.js.map"],"names":[],"mappings":"AAAA,6GAA6G;AAC7G,sKAAsK;AACtK,kJAAkJ;AAClJ,iGAAiG;;;;;AAC1F,MAAM,yBAAyB,uTAEtC,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/router/utils/is-bot.js"],"sourcesContent":["import { HTML_LIMITED_BOT_UA_RE } from './html-bots';\n// Bot crawler that will spin up a headless browser and execute JS.\n// Only the main Googlebot search crawler executes JavaScript, not other Google crawlers.\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\n// This regex specifically matches \"Googlebot\" but NOT \"Mediapartners-Google\", \"AdsBot-Google\", etc.\nconst HEADLESS_BROWSER_BOT_UA_RE = /Googlebot(?!-)|Googlebot$/i;\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source;\nexport { HTML_LIMITED_BOT_UA_RE };\nfunction isDomBotUA(userAgent) {\n    return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent);\n}\nfunction isHtmlLimitedBotUA(userAgent) {\n    return HTML_LIMITED_BOT_UA_RE.test(userAgent);\n}\nexport function isBot(userAgent) {\n    return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent);\n}\nexport function getBotType(userAgent) {\n    if (isDomBotUA(userAgent)) {\n        return 'dom';\n    }\n    if (isHtmlLimitedBotUA(userAgent)) {\n        return 'html';\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=is-bot.js.map"],"names":[],"mappings":";;;;;;;;AAAA;;AACA,mEAAmE;AACnE,yFAAyF;AACzF,4FAA4F;AAC5F,oGAAoG;AACpG,MAAM,6BAA6B;AAC5B,MAAM,gCAAgC,qRAAsB,CAAC,MAAM;;AAE1E,SAAS,WAAW,SAAS;IACzB,OAAO,2BAA2B,IAAI,CAAC;AAC3C;AACA,SAAS,mBAAmB,SAAS;IACjC,OAAO,qRAAsB,CAAC,IAAI,CAAC;AACvC;AACO,SAAS,MAAM,SAAS;IAC3B,OAAO,WAAW,cAAc,mBAAmB;AACvD;AACO,SAAS,WAAW,SAAS;IAChC,IAAI,WAAW,YAAY;QACvB,OAAO;IACX;IACA,IAAI,mBAAmB,YAAY;QAC/B,OAAO;IACX;IACA,OAAO;AACX,EAEA,kCAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/error-boundary.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { useUntrackedPathname } from './navigation-untracked';\nimport { isNextRouterError } from './is-next-router-error';\nimport { handleHardNavError } from './nav-failure-handler';\nimport { HandleISRError } from './handle-isr-error';\nimport { isBot } from '../../shared/lib/router/utils/is-bot';\nconst isBotUserAgent = typeof window !== 'undefined' && isBot(window.navigator.userAgent);\nexport class ErrorBoundaryHandler extends React.Component {\n    static getDerivedStateFromError(error) {\n        if (isNextRouterError(error)) {\n            // Re-throw if an expected internal Next.js router error occurs\n            // this means it should be handled by a different boundary (such as a NotFound boundary in a parent segment)\n            throw error;\n        }\n        return {\n            error\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        const { error } = state;\n        // if we encounter an error while\n        // a navigation is pending we shouldn't render\n        // the error boundary and instead should fallback\n        // to a hard navigation to attempt recovering\n        if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n            if (error && handleHardNavError(error)) {\n                // clear error so we don't render anything\n                return {\n                    error: null,\n                    previousPathname: props.pathname\n                };\n            }\n        }\n        /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */ if (props.pathname !== state.previousPathname && state.error) {\n            return {\n                error: null,\n                previousPathname: props.pathname\n            };\n        }\n        return {\n            error: state.error,\n            previousPathname: props.pathname\n        };\n    }\n    // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n    render() {\n        //When it's bot request, segment level error boundary will keep rendering the children,\n        // the final error will be caught by the root error boundary and determine wether need to apply graceful degrade.\n        if (this.state.error && !isBotUserAgent) {\n            return /*#__PURE__*/ _jsxs(_Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(HandleISRError, {\n                        error: this.state.error\n                    }),\n                    this.props.errorStyles,\n                    this.props.errorScripts,\n                    /*#__PURE__*/ _jsx(this.props.errorComponent, {\n                        error: this.state.error,\n                        reset: this.reset\n                    })\n                ]\n            });\n        }\n        return this.props.children;\n    }\n    constructor(props){\n        super(props), this.reset = ()=>{\n            this.setState({\n                error: null\n            });\n        };\n        this.state = {\n            error: null,\n            previousPathname: this.props.pathname\n        };\n    }\n}\n/**\n * Handles errors through `getDerivedStateFromError`.\n * Renders the provided error component and provides a way to `reset` the error boundary state.\n */ /**\n * Renders error boundary with the provided \"errorComponent\" property as the fallback.\n * If no \"errorComponent\" property is provided it renders the children without an error boundary.\n */ export function ErrorBoundary(param) {\n    let { errorComponent, errorStyles, errorScripts, children } = param;\n    // When we're rendering the missing params shell, this will return null. This\n    // is because we won't be rendering any not found boundaries or error\n    // boundaries for the missing params shell. When this runs on the client\n    // (where these errors can occur), we will get the correct pathname.\n    const pathname = useUntrackedPathname();\n    if (errorComponent) {\n        return /*#__PURE__*/ _jsx(ErrorBoundaryHandler, {\n            pathname: pathname,\n            errorComponent: errorComponent,\n            errorStyles: errorStyles,\n            errorScripts: errorScripts,\n            children: children\n        });\n    }\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: children\n    });\n}\n\n//# sourceMappingURL=error-boundary.js.map"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAQA,MAAM,iBAAiB,gBAAkB,eAAe,IAAA,iRAAK,EAAC,OAAO,SAAS,CAAC,SAAS;AACjF,MAAM,6BAA6B,oRAAK,CAAC,SAAS;IACrD,OAAO,yBAAyB,KAAK,EAAE;QACnC,IAAI,IAAA,qRAAiB,EAAC,QAAQ;YAC1B,+DAA+D;YAC/D,4GAA4G;YAC5G,MAAM;QACV;QACA,OAAO;YACH;QACJ;IACJ;IACA,OAAO,yBAAyB,KAAK,EAAE,KAAK,EAAE;QAC1C,MAAM,EAAE,KAAK,EAAE,GAAG;QAClB,iCAAiC;QACjC,8CAA8C;QAC9C,iDAAiD;QACjD,6CAA6C;QAC7C;;QASA;;;;;KAKH,GAAG,IAAI,MAAM,QAAQ,KAAK,MAAM,gBAAgB,IAAI,MAAM,KAAK,EAAE;YAC1D,OAAO;gBACH,OAAO;gBACP,kBAAkB,MAAM,QAAQ;YACpC;QACJ;QACA,OAAO;YACH,OAAO,MAAM,KAAK;YAClB,kBAAkB,MAAM,QAAQ;QACpC;IACJ;IACA,yIAAyI;IACzI,SAAS;QACL,uFAAuF;QACvF,iHAAiH;QACjH,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,gBAAgB;YACrC,OAAO,WAAW,GAAG,IAAA,mSAAK,EAAC,uSAAS,EAAE;gBAClC,UAAU;oBACN,WAAW,GAAG,IAAA,kSAAI,EAAC,2QAAc,EAAE;wBAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;oBAC3B;oBACA,IAAI,CAAC,KAAK,CAAC,WAAW;oBACtB,IAAI,CAAC,KAAK,CAAC,YAAY;oBACvB,WAAW,GAAG,IAAA,kSAAI,EAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;wBAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;wBACvB,OAAO,IAAI,CAAC,KAAK;oBACrB;iBACH;YACL;QACJ;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC9B;IACA,YAAY,KAAK,CAAC;QACd,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,GAAG;YACvB,IAAI,CAAC,QAAQ,CAAC;gBACV,OAAO;YACX;QACJ;QACA,IAAI,CAAC,KAAK,GAAG;YACT,OAAO;YACP,kBAAkB,IAAI,CAAC,KAAK,CAAC,QAAQ;QACzC;IACJ;AACJ;AAOW,SAAS,cAAc,KAAK;IACnC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG;IAC9D,6EAA6E;IAC7E,qEAAqE;IACrE,wEAAwE;IACxE,oEAAoE;IACpE,MAAM,WAAW,IAAA,kRAAoB;IACrC,IAAI,gBAAgB;QAChB,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,sBAAsB;YAC5C,UAAU;YACV,gBAAgB;YAChB,aAAa;YACb,cAAc;YACd,UAAU;QACd;IACJ;IACA,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,uSAAS,EAAE;QACjC,UAAU;IACd;AACJ,EAEA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/match-segments.js"],"sourcesContent":["export const matchSegment = (existingSegment, segment)=>{\n    // segment is either Array or string\n    if (typeof existingSegment === 'string') {\n        if (typeof segment === 'string') {\n            // Common case: segment is just a string\n            return existingSegment === segment;\n        }\n        return false;\n    }\n    if (typeof segment === 'string') {\n        return false;\n    }\n    return existingSegment[0] === segment[0] && existingSegment[1] === segment[1];\n};\n\n//# sourceMappingURL=match-segments.js.map"],"names":[],"mappings":";;;;AAAO,MAAM,eAAe,CAAC,iBAAiB;IAC1C,oCAAoC;IACpC,IAAI,OAAO,oBAAoB,UAAU;QACrC,IAAI,OAAO,YAAY,UAAU;YAC7B,wCAAwC;YACxC,OAAO,oBAAoB;QAC/B;QACA,OAAO;IACX;IACA,IAAI,OAAO,YAAY,UAAU;QAC7B,OAAO;IACX;IACA,OAAO,eAAe,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,IAAI,eAAe,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE;AACjF,GAEA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/router/utils/disable-smooth-scroll.js"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once';\n/**\n * Run function with `scroll-behavior: auto` applied to `<html/>`.\n * This css change will be reverted after the function finishes.\n */ export function disableSmoothScrollDuringRouteTransition(fn, options) {\n    if (options === void 0) options = {};\n    // if only the hash is changed, we don't need to disable smooth scrolling\n    // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX\n    if (options.onlyHashChange) {\n        fn();\n        return;\n    }\n    const htmlElement = document.documentElement;\n    const hasDataAttribute = htmlElement.dataset.scrollBehavior === 'smooth';\n    // Since this is a breaking change, this is temporarily flagged\n    // and will be false by default.\n    // In the next major (v16), this will be automatically enabled\n    if (process.env.__NEXT_OPTIMIZE_ROUTER_SCROLL) {\n        if (!hasDataAttribute) {\n            // No smooth scrolling configured, run directly without style manipulation\n            fn();\n            return;\n        }\n    } else {\n        // Old behavior: always manipulate styles, but warn about upcoming change\n        // Warn if smooth scrolling is detected but no data attribute is present\n        if (process.env.NODE_ENV === 'development' && !hasDataAttribute && getComputedStyle(htmlElement).scrollBehavior === 'smooth') {\n            warnOnce('Detected `scroll-behavior: smooth` on the `<html>` element. In a future version, ' + 'Next.js will no longer automatically disable smooth scrolling during route transitions. ' + 'To prepare for this change, add `data-scroll-behavior=\"smooth\"` to your <html> element. ' + 'Learn more: https://nextjs.org/docs/messages/missing-data-scroll-behavior');\n        }\n    }\n    // Proceed with temporarily disabling smooth scrolling\n    const existing = htmlElement.style.scrollBehavior;\n    htmlElement.style.scrollBehavior = 'auto';\n    if (!options.dontForceLayout) {\n        // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n        // Otherwise it will not pickup the change in scrollBehavior\n        // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n        htmlElement.getClientRects();\n    }\n    fn();\n    htmlElement.style.scrollBehavior = existing;\n}\n\n//# sourceMappingURL=disable-smooth-scroll.js.map"],"names":[],"mappings":";;;;;;;;;;AAIW,SAAS,yCAAyC,EAAE,EAAE,OAAO;IACpE,IAAI,YAAY,KAAK,GAAG,UAAU,CAAC;IACnC,yEAAyE;IACzE,6FAA6F;IAC7F,IAAI,QAAQ,cAAc,EAAE;QACxB;QACA;IACJ;IACA,MAAM,cAAc,SAAS,eAAe;IAC5C,MAAM,mBAAmB,YAAY,OAAO,CAAC,cAAc,KAAK;IAChE,+DAA+D;IAC/D,gCAAgC;IAChC,8DAA8D;IAC9D;;SAMO;QACH,yEAAyE;QACzE,wEAAwE;QACxE,IAAI,oDAAyB,iBAAiB,CAAC,oBAAoB,iBAAiB,aAAa,cAAc,KAAK,UAAU;YAC1H,SAAS,sFAAsF,6FAA6F,6FAA6F;QAC7R;IACJ;IACA,sDAAsD;IACtD,MAAM,WAAW,YAAY,KAAK,CAAC,cAAc;IACjD,YAAY,KAAK,CAAC,cAAc,GAAG;IACnC,IAAI,CAAC,QAAQ,eAAe,EAAE;QAC1B,8EAA8E;QAC9E,4DAA4D;QAC5D,yFAAyF;QACzF,YAAY,cAAc;IAC9B;IACA;IACA,YAAY,KAAK,CAAC,cAAc,GAAG;AACvC,EAEA,iDAAiD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1364, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js"],"sourcesContent":["export function getSegmentValue(segment) {\n    return Array.isArray(segment) ? segment[1] : segment;\n}\n\n//# sourceMappingURL=get-segment-value.js.map"],"names":[],"mappings":";;;;AAAO,SAAS,gBAAgB,OAAO;IACnC,OAAO,MAAM,OAAO,CAAC,WAAW,OAAO,CAAC,EAAE,GAAG;AACjD,EAEA,6CAA6C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/redirect.js"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code';\nimport { RedirectType, isRedirectError, REDIRECT_ERROR_CODE } from './redirect-error';\nconst actionAsyncStorage = typeof window === 'undefined' ? require('../../server/app-render/action-async-storage.external').actionAsyncStorage : undefined;\nexport function getRedirectError(url, type, statusCode) {\n    if (statusCode === void 0) statusCode = RedirectStatusCode.TemporaryRedirect;\n    const error = Object.defineProperty(new Error(REDIRECT_ERROR_CODE), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = REDIRECT_ERROR_CODE + \";\" + type + \";\" + url + \";\" + statusCode + \";\";\n    return error;\n}\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */ export function redirect(/** The URL to redirect to */ url, type) {\n    var _actionAsyncStorage_getStore;\n    type != null ? type : type = (actionAsyncStorage == null ? void 0 : (_actionAsyncStorage_getStore = actionAsyncStorage.getStore()) == null ? void 0 : _actionAsyncStorage_getStore.isAction) ? RedirectType.push : RedirectType.replace;\n    throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect);\n}\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */ export function permanentRedirect(/** The URL to redirect to */ url, type) {\n    if (type === void 0) type = RedirectType.replace;\n    throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect);\n}\nexport function getURLFromRedirectError(error) {\n    if (!isRedirectError(error)) return null;\n    // Slices off the beginning of the digest that contains the code and the\n    // separating ';'.\n    return error.digest.split(';').slice(2, -2).join(';');\n}\nexport function getRedirectTypeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw Object.defineProperty(new Error('Not a redirect error'), \"__NEXT_ERROR_CODE\", {\n            value: \"E260\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return error.digest.split(';', 2)[1];\n}\nexport function getRedirectStatusCodeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw Object.defineProperty(new Error('Not a redirect error'), \"__NEXT_ERROR_CODE\", {\n            value: \"E260\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return Number(error.digest.split(';').at(-2));\n}\n\n//# sourceMappingURL=redirect.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;;AACA,MAAM,qBAAqB,uCAAgC,mLAAiE,kBAAkB,GAAG;AAC1I,SAAS,iBAAiB,GAAG,EAAE,IAAI,EAAE,UAAU;IAClD,IAAI,eAAe,KAAK,GAAG,aAAa,mRAAkB,CAAC,iBAAiB;IAC5E,MAAM,QAAQ,OAAO,cAAc,CAAC,IAAI,MAAM,2QAAmB,GAAG,qBAAqB;QACrF,OAAO;QACP,YAAY;QACZ,cAAc;IAClB;IACA,MAAM,MAAM,GAAG,2QAAmB,GAAG,MAAM,OAAO,MAAM,MAAM,MAAM,aAAa;IACjF,OAAO;AACX;AAYW,SAAS,SAAS,2BAA2B,GAAG,GAAG,EAAE,IAAI;IAChE,IAAI;IACJ,QAAQ,OAAO,OAAO,OAAO,CAAC,sBAAsB,OAAO,KAAK,IAAI,CAAC,+BAA+B,mBAAmB,QAAQ,EAAE,KAAK,OAAO,KAAK,IAAI,6BAA6B,QAAQ,IAAI,oQAAY,CAAC,IAAI,GAAG,oQAAY,CAAC,OAAO;IACvO,MAAM,iBAAiB,KAAK,MAAM,mRAAkB,CAAC,iBAAiB;AAC1E;AAWW,SAAS,kBAAkB,2BAA2B,GAAG,GAAG,EAAE,IAAI;IACzE,IAAI,SAAS,KAAK,GAAG,OAAO,oQAAY,CAAC,OAAO;IAChD,MAAM,iBAAiB,KAAK,MAAM,mRAAkB,CAAC,iBAAiB;AAC1E;AACO,SAAS,wBAAwB,KAAK;IACzC,IAAI,CAAC,IAAA,uQAAe,EAAC,QAAQ,OAAO;IACpC,wEAAwE;IACxE,kBAAkB;IAClB,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AACrD;AACO,SAAS,yBAAyB,KAAK;IAC1C,IAAI,CAAC,IAAA,uQAAe,EAAC,QAAQ;QACzB,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,yBAAyB,qBAAqB;YAChF,OAAO;YACP,YAAY;YACZ,cAAc;QAClB;IACJ;IACA,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE;AACxC;AACO,SAAS,+BAA+B,KAAK;IAChD,IAAI,CAAC,IAAA,uQAAe,EAAC,QAAQ;QACzB,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,yBAAyB,qBAAqB;YAChF,OAAO;YACP,YAAY;YACZ,cAAc;QAClB;IACJ;IACA,OAAO,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;AAC9C,EAEA,oCAAoC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1443, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/not-found.js"],"sourcesContent":["import { HTTP_ERROR_FALLBACK_ERROR_CODE } from './http-access-fallback/http-access-fallback';\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */ const DIGEST = \"\" + HTTP_ERROR_FALLBACK_ERROR_CODE + \";404\";\nexport function notFound() {\n    // eslint-disable-next-line no-throw-literal\n    const error = Object.defineProperty(new Error(DIGEST), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = DIGEST;\n    throw error;\n}\n\n//# sourceMappingURL=not-found.js.map"],"names":[],"mappings":";;;;AAAA;;AACA;;;;;;;;;;;;;CAaC,GAAG,MAAM,SAAS,KAAK,6TAA8B,GAAG;AAClD,SAAS;IACZ,4CAA4C;IAC5C,MAAM,QAAQ,OAAO,cAAc,CAAC,IAAI,MAAM,SAAS,qBAAqB;QACxE,OAAO;QACP,YAAY;QACZ,cAAc;IAClB;IACA,MAAM,MAAM,GAAG;IACf,MAAM;AACV,EAEA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1477, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/forbidden.js"],"sourcesContent":["import { HTTP_ERROR_FALLBACK_ERROR_CODE } from './http-access-fallback/http-access-fallback';\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */ const DIGEST = \"\" + HTTP_ERROR_FALLBACK_ERROR_CODE + \";403\";\nexport function forbidden() {\n    if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n        throw Object.defineProperty(new Error(\"`forbidden()` is experimental and only allowed to be enabled when `experimental.authInterrupts` is enabled.\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E488\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // eslint-disable-next-line no-throw-literal\n    const error = Object.defineProperty(new Error(DIGEST), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = DIGEST;\n    throw error;\n}\n\n//# sourceMappingURL=forbidden.js.map"],"names":[],"mappings":";;;;AAAA;;AACA,6BAA6B;AAC7B;;;;;;;;;;;CAWC,GAAG,MAAM,SAAS,KAAK,6TAA8B,GAAG;AAClD,SAAS;IACZ,wCAAsD;QAClD,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,gHAAgH,qBAAqB;YACvK,OAAO;YACP,YAAY;YACZ,cAAc;QAClB;IACJ;IACA,4CAA4C;IAC5C,MAAM,QAAQ,OAAO,cAAc,CAAC,IAAI,MAAM,SAAS,qBAAqB;QACxE,OAAO;QACP,YAAY;QACZ,cAAc;IAClB;IACA,MAAM,MAAM,GAAG;IACf,MAAM;AACV,EAEA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1517, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/navigation.react-server.js"],"sourcesContent":["/** @internal */ class ReadonlyURLSearchParamsError extends Error {\n    constructor(){\n        super('Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams');\n    }\n}\nclass ReadonlyURLSearchParams extends URLSearchParams {\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ append() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ delete() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ set() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ sort() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n}\nexport function unstable_isUnrecognizedActionError() {\n    throw Object.defineProperty(new Error('`unstable_isUnrecognizedActionError` can only be used on the client.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E776\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport { redirect, permanentRedirect } from './redirect';\nexport { RedirectType } from './redirect-error';\nexport { notFound } from './not-found';\nexport { forbidden } from './forbidden';\nexport { unauthorized } from './unauthorized';\nexport { unstable_rethrow } from './unstable-rethrow';\nexport { ReadonlyURLSearchParams };\n\n//# sourceMappingURL=navigation.react-server.js.map"],"names":[],"mappings":"AAAA,cAAc;;;;;;AA0Bd;AACA;AACA;AACA;;;;;;;;;;;AA7BiB,MAAM,qCAAqC;IACxD,aAAa;QACT,KAAK,CAAC;IACV;AACJ;AACA,MAAM,gCAAgC;IAClC,wKAAwK,GAAG,SAAS;QAChL,MAAM,IAAI;IACd;IACA,wKAAwK,GAAG,SAAS;QAChL,MAAM,IAAI;IACd;IACA,wKAAwK,GAAG,MAAM;QAC7K,MAAM,IAAI;IACd;IACA,wKAAwK,GAAG,OAAO;QAC9K,MAAM,IAAI;IACd;AACJ;AACO,SAAS;IACZ,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,yEAAyE,qBAAqB;QAChI,OAAO;QACP,YAAY;QACZ,cAAc;IAClB;AACJ;;;;;;;;CASA,mDAAmD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/hooks-server-context.js"],"sourcesContent":["const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE';\nexport class DynamicServerError extends Error {\n    constructor(description){\n        super(\"Dynamic server usage: \" + description), this.description = description, this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nexport function isDynamicServerError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err) || typeof err.digest !== 'string') {\n        return false;\n    }\n    return err.digest === DYNAMIC_ERROR_CODE;\n}\n\n//# sourceMappingURL=hooks-server-context.js.map"],"names":[],"mappings":";;;;;;AAAA,MAAM,qBAAqB;AACpB,MAAM,2BAA2B;IACpC,YAAY,WAAW,CAAC;QACpB,KAAK,CAAC,2BAA2B,cAAc,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,MAAM,GAAG;IACjG;AACJ;AACO,SAAS,qBAAqB,GAAG;IACpC,IAAI,OAAO,QAAQ,YAAY,QAAQ,QAAQ,CAAC,CAAC,YAAY,GAAG,KAAK,OAAO,IAAI,MAAM,KAAK,UAAU;QACjG,OAAO;IACX;IACA,OAAO,IAAI,MAAM,KAAK;AAC1B,EAEA,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1597, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/static-generation-bailout.js"],"sourcesContent":["const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT';\nexport class StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args), this.code = NEXT_STATIC_GEN_BAILOUT;\n    }\n}\nexport function isStaticGenBailoutError(error) {\n    if (typeof error !== 'object' || error === null || !('code' in error)) {\n        return false;\n    }\n    return error.code === NEXT_STATIC_GEN_BAILOUT;\n}\n\n//# sourceMappingURL=static-generation-bailout.js.map"],"names":[],"mappings":";;;;;;AAAA,MAAM,0BAA0B;AACzB,MAAM,8BAA8B;IACvC,YAAY,GAAG,IAAI,CAAC;QAChB,KAAK,IAAI,OAAO,IAAI,CAAC,IAAI,GAAG;IAChC;AACJ;AACO,SAAS,wBAAwB,KAAK;IACzC,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,CAAC,CAAC,UAAU,KAAK,GAAG;QACnE,OAAO;IACX;IACA,OAAO,MAAM,IAAI,KAAK;AAC1B,EAEA,qDAAqD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1619, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/server/dynamic-rendering-utils.js"],"sourcesContent":["export function isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(route, expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`), this.route = route, this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, route, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(route, expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(route, expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\nexport function makeDevtoolsIOAwarePromise(underlying) {\n    // in React DevTools if we resolve in a setTimeout we will observe\n    // the promise resolution as something that can suspend a boundary or root.\n    return new Promise((resolve)=>{\n        // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n        setTimeout(()=>{\n            resolve(underlying);\n        }, 0);\n    });\n}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map"],"names":[],"mappings":";;;;;;;;AAAO,SAAS,+BAA+B,GAAG;IAC9C,IAAI,OAAO,QAAQ,YAAY,QAAQ,QAAQ,CAAC,CAAC,YAAY,GAAG,GAAG;QAC/D,OAAO;IACX;IACA,OAAO,IAAI,MAAM,KAAK;AAC1B;AACA,MAAM,4BAA4B;AAClC,MAAM,qCAAqC;IACvC,YAAY,KAAK,EAAE,UAAU,CAAC;QAC1B,KAAK,CAAC,CAAC,qBAAqB,EAAE,WAAW,qGAAqG,EAAE,WAAW,8KAA8K,EAAE,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,UAAU,GAAG,YAAY,IAAI,CAAC,MAAM,GAAG;IAC3Z;AACJ;AACA,MAAM,yBAAyB,IAAI;AAOxB,SAAS,mBAAmB,MAAM,EAAE,KAAK,EAAE,UAAU;IAC5D,IAAI,OAAO,OAAO,EAAE;QAChB,OAAO,QAAQ,MAAM,CAAC,IAAI,6BAA6B,OAAO;IAClE,OAAO;QACH,MAAM,iBAAiB,IAAI,QAAQ,CAAC,GAAG;YACnC,MAAM,iBAAiB,OAAO,IAAI,CAAC,MAAM,IAAI,6BAA6B,OAAO;YACjF,IAAI,mBAAmB,uBAAuB,GAAG,CAAC;YAClD,IAAI,kBAAkB;gBAClB,iBAAiB,IAAI,CAAC;YAC1B,OAAO;gBACH,MAAM,YAAY;oBACd;iBACH;gBACD,uBAAuB,GAAG,CAAC,QAAQ;gBACnC,OAAO,gBAAgB,CAAC,SAAS;oBAC7B,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAI;wBACrC,SAAS,CAAC,EAAE;oBAChB;gBACJ,GAAG;oBACC,MAAM;gBACV;YACJ;QACJ;QACA,2GAA2G;QAC3G,6GAA6G;QAC7G,yFAAyF;QACzF,eAAe,KAAK,CAAC;QACrB,OAAO;IACX;AACJ;AACA,SAAS,gBAAgB;AAClB,SAAS,2BAA2B,UAAU;IACjD,kEAAkE;IAClE,2EAA2E;IAC3E,OAAO,IAAI,QAAQ,CAAC;QAChB,sFAAsF;QACtF,WAAW;YACP,QAAQ;QACZ,GAAG;IACP;AACJ,EAEA,mDAAmD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1685, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/lib/framework/boundary-constants.js"],"sourcesContent":["export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__';\n\n//# sourceMappingURL=boundary-constants.js.map"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,yBAAyB;AAC/B,MAAM,yBAAyB;AAC/B,MAAM,uBAAuB;AAC7B,MAAM,4BAA4B,iCAEzC,8CAA8C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1703, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/lib/scheduler.js"],"sourcesContent":["/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;AAAU,MAAM,qBAAqB,CAAC;IACnC,6EAA6E;IAC7E,4EAA4E;IAC5E,uCAAuC;IACvC,EAAE;IACF,kLAAkL;IAClL,EAAE;IACF,QAAQ,OAAO,GAAG,IAAI,CAAC;QACnB;;aAEO;YACH,QAAQ,QAAQ,CAAC;QACrB;IACJ;AACJ;AAMW,MAAM,oBAAoB,CAAC;IAClC;;SAEO;QACH,aAAa;IACjB;AACJ;AAKW,SAAS;IAChB,OAAO,IAAI,QAAQ,CAAC,UAAU,kBAAkB;AACpD;AASW,SAAS;IAChB;;SAEO;QACH,OAAO,IAAI,QAAQ,CAAC,IAAI,aAAa;IACzC;AACJ,EAEA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1754, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js"],"sourcesContent":["// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING';\n/** An error that should be thrown when we want to bail out to client-side rendering. */ export class BailoutToCSRError extends Error {\n    constructor(reason){\n        super(\"Bail out to client-side rendering: \" + reason), this.reason = reason, this.digest = BAILOUT_TO_CSR;\n    }\n}\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */ export function isBailoutToCSRError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === BAILOUT_TO_CSR;\n}\n\n//# sourceMappingURL=bailout-to-csr.js.map"],"names":[],"mappings":"AAAA,+GAA+G;;;;;;;AAC/G,MAAM,iBAAiB;AACyE,MAAM,0BAA0B;IAC5H,YAAY,MAAM,CAAC;QACf,KAAK,CAAC,wCAAwC,SAAS,IAAI,CAAC,MAAM,GAAG,QAAQ,IAAI,CAAC,MAAM,GAAG;IAC/F;AACJ;AACsH,SAAS,oBAAoB,GAAG;IAClJ,IAAI,OAAO,QAAQ,YAAY,QAAQ,QAAQ,CAAC,CAAC,YAAY,GAAG,GAAG;QAC/D,OAAO;IACX;IACA,OAAO,IAAI,MAAM,KAAK;AAC1B,EAEA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1777, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/invariant-error.js"],"sourcesContent":["export class InvariantError extends Error {\n    constructor(message, options){\n        super(\"Invariant: \" + (message.endsWith('.') ? message : message + '.') + \" This is a bug in Next.js.\", options);\n        this.name = 'InvariantError';\n    }\n}\n\n//# sourceMappingURL=invariant-error.js.map"],"names":[],"mappings":";;;;AAAO,MAAM,uBAAuB;IAChC,YAAY,OAAO,EAAE,OAAO,CAAC;QACzB,KAAK,CAAC,gBAAgB,CAAC,QAAQ,QAAQ,CAAC,OAAO,UAAU,UAAU,GAAG,IAAI,8BAA8B;QACxG,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ,EAEA,2CAA2C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1791, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/server/app-render/dynamic-rendering.js"],"sourcesContent":["/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { getRuntimeStagePromise, workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME, ROOT_LAYOUT_BOUNDARY_NAME } from '../../lib/framework/boundary-constants';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspenseAboveBody: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasAllowedDynamic: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'unstable-cache':\n                // Inside cache scopes, marking a scope as dynamic has no effect,\n                // because the outer cache scope creates a cache boundary. This is\n                // subtly different from reading a dynamic data source, which is\n                // forbidden inside a cache scope.\n                return;\n            case 'private-cache':\n                // A private cache scope is already dynamic by definition.\n                return;\n            case 'prerender-legacy':\n            case 'prerender-ppr':\n            case 'request':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender-ppr':\n                return postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n            case 'prerender-legacy':\n                workUnitStore.revalidate = 0;\n                // We aren't prerendering, but we are generating a static page. We need\n                // to bail out of static generation.\n                const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E550\",\n                    enumerable: false,\n                    configurable: true\n                });\n                store.dynamicUsageDescription = expression;\n                store.dynamicUsageStack = err.stack;\n                throw err;\n            case 'request':\n                if (process.env.NODE_ENV !== 'production') {\n                    workUnitStore.usedDynamic = true;\n                }\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n}\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'cache':\n        case 'unstable-cache':\n            // Inside cache scopes, marking a scope as dynamic has no effect,\n            // because the outer cache scope creates a cache boundary. This is\n            // subtly different from reading a dynamic data source, which is\n            // forbidden inside a cache scope.\n            return;\n        case 'private-cache':\n            // A private cache scope is already dynamic by definition.\n            return;\n        case 'prerender':\n        case 'prerender-runtime':\n        case 'prerender-legacy':\n        case 'prerender-ppr':\n        case 'prerender-client':\n            break;\n        case 'request':\n            if (process.env.NODE_ENV !== 'production') {\n                workUnitStore.usedDynamic = true;\n            }\n            break;\n        default:\n            workUnitStore;\n    }\n}\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n        // It is important that we set this tracking value after aborting. Aborts are executed\n        // synchronously except for the case where you abort during render itself. By setting this\n        // value late we can use it to determine if any of the aborted tasks are the task that\n        // called the sync IO expression in the first place.\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n            }\n        }\n    }\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\n/**\n * Use this function when dynamically prerendering with dynamicIO.\n * We don't want to error, because it's better to return something\n * (and we've already aborted the render at the point where the sync dynamic error occured),\n * but we should log an error server-side.\n * @internal\n */ export function warnOnSyncDynamicError(dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack) {\n        // the server did something sync dynamic, likely\n        // leading to an early termination of the prerender.\n        console.error(dynamicTracking.syncDynamicErrorWithStack);\n    }\n}\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createRenderInBrowserAbortSignal() {\n    const controller = new AbortController();\n    controller.abort(Object.defineProperty(new BailoutToCSRError('Render in Browser'), \"__NEXT_ERROR_CODE\", {\n        value: \"E721\",\n        enumerable: false,\n        configurable: true\n    }));\n    return controller.signal;\n}\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */ export function createHangingInputAbortSignal(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'prerender':\n        case 'prerender-runtime':\n            const controller = new AbortController();\n            if (workUnitStore.cacheSignal) {\n                // If we have a cacheSignal it means we're in a prospective render. If\n                // the input we're waiting on is coming from another cache, we do want\n                // to wait for it so that we can resolve this cache entry too.\n                workUnitStore.cacheSignal.inputReady().then(()=>{\n                    controller.abort();\n                });\n            } else {\n                // Otherwise we're in the final render and we should already have all\n                // our caches filled.\n                // If the prerender uses stages, we have wait until the runtime stage,\n                // at which point all runtime inputs will be resolved.\n                // (otherwise, a runtime prerender might consider `cookies()` hanging\n                //  even though they'd resolve in the next task.)\n                //\n                // We might still be waiting on some microtasks so we\n                // wait one tick before giving up. When we give up, we still want to\n                // render the content of this cache as deeply as we can so that we can\n                // suspend as deeply as possible in the tree or not at all if we don't\n                // end up waiting for the input.\n                const runtimeStagePromise = getRuntimeStagePromise(workUnitStore);\n                if (runtimeStagePromise) {\n                    runtimeStagePromise.then(()=>scheduleOnNextTick(()=>controller.abort()));\n                } else {\n                    scheduleOnNextTick(()=>controller.abort());\n                }\n            }\n            return controller.signal;\n        case 'prerender-client':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n        case 'request':\n        case 'cache':\n        case 'private-cache':\n        case 'unstable-cache':\n            return undefined;\n        default:\n            workUnitStore;\n    }\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    const workStore = workAsyncStorage.getStore();\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workStore && workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender-client':\n            case 'prerender':\n                {\n                    const fallbackParams = workUnitStore.fallbackRouteParams;\n                    if (fallbackParams && fallbackParams.size > 0) {\n                        // We are in a prerender with cacheComponents semantics. We are going to\n                        // hang here and never resolve. This will cause the currently\n                        // rendering component to effectively be a dynamic hole.\n                        React.use(makeHangingPromise(workUnitStore.renderSignal, workStore.route, expression));\n                    }\n                    break;\n                }\n            case 'prerender-ppr':\n                {\n                    const fallbackParams = workUnitStore.fallbackRouteParams;\n                    if (fallbackParams && fallbackParams.size > 0) {\n                        return postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n                    }\n                    break;\n                }\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError(`\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E771\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'cache':\n            case 'private-cache':\n                throw Object.defineProperty(new InvariantError(`\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E745\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-legacy':\n            case 'request':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags = 'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6';\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(`\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`);\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(workStore, componentStack, dynamicValidation, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(componentStack)) {\n        // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n        // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n        // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n        dynamicValidation.hasAllowedDynamic = true;\n        dynamicValidation.hasSuspenseAboveBody = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        // this error had a Suspense boundary above it so we don't need to report it as a source\n        // of disallowed\n        dynamicValidation.hasAllowedDynamic = true;\n        return;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        // This task was the task that called the sync error.\n        dynamicValidation.dynamicErrors.push(clientDynamic.syncDynamicErrorWithStack);\n        return;\n    } else {\n        const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentOrOwnerStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */ function createErrorWithComponentOrOwnerStack(message, componentStack) {\n    const ownerStack = process.env.NODE_ENV !== 'production' && React.captureOwnerStack ? React.captureOwnerStack() : null;\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = error.name + ': ' + message + (ownerStack ?? componentStack);\n    return error;\n}\nexport var PreludeState = /*#__PURE__*/ function(PreludeState) {\n    PreludeState[PreludeState[\"Full\"] = 0] = \"Full\";\n    PreludeState[PreludeState[\"Empty\"] = 1] = \"Empty\";\n    PreludeState[PreludeState[\"Errored\"] = 2] = \"Errored\";\n    return PreludeState;\n}({});\nexport function logDisallowedDynamicError(workStore, error) {\n    console.error(error);\n    if (!workStore.dev) {\n        if (workStore.hasReadableErrorStacks) {\n            console.error(`To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`);\n        } else {\n            console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`);\n        }\n    }\n}\nexport function throwIfDisallowedDynamic(workStore, prelude, dynamicValidation, serverDynamic) {\n    if (prelude !== 0) {\n        if (dynamicValidation.hasSuspenseAboveBody) {\n            // This route has opted into allowing fully dynamic rendering\n            // by including a Suspense boundary above the body. In this case\n            // a lack of a shell is not considered disallowed so we simply return\n            return;\n        }\n        if (serverDynamic.syncDynamicErrorWithStack) {\n            // There is no shell and the server did something sync dynamic likely\n            // leading to an early termination of the prerender before the shell\n            // could be completed. We terminate the build/validating render.\n            logDisallowedDynamicError(workStore, serverDynamic.syncDynamicErrorWithStack);\n            throw new StaticGenBailoutError();\n        }\n        // We didn't have any sync bailouts but there may be user code which\n        // blocked the root. We would have captured these during the prerender\n        // and can log them here and then terminate the build/validating render\n        const dynamicErrors = dynamicValidation.dynamicErrors;\n        if (dynamicErrors.length > 0) {\n            for(let i = 0; i < dynamicErrors.length; i++){\n                logDisallowedDynamicError(workStore, dynamicErrors[i]);\n            }\n            throw new StaticGenBailoutError();\n        }\n        // If we got this far then the only other thing that could be blocking\n        // the root is dynamic Viewport. If this is dynamic then\n        // you need to opt into that by adding a Suspense boundary above the body\n        // to indicate your are ok with fully dynamic rendering.\n        if (dynamicValidation.hasDynamicViewport) {\n            console.error(`Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`);\n            throw new StaticGenBailoutError();\n        }\n        if (prelude === 1) {\n            // If we ever get this far then we messed up the tracking of invalid dynamic.\n            // We still adhere to the constraint that you must produce a shell but invite the\n            // user to report this as a bug in Next.js.\n            console.error(`Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`);\n            throw new StaticGenBailoutError();\n        }\n    } else {\n        if (dynamicValidation.hasAllowedDynamic === false && dynamicValidation.hasDynamicMetadata) {\n            console.error(`Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`);\n            throw new StaticGenBailoutError();\n        }\n    }\n}\nexport function delayUntilRuntimeStage(prerenderStore, result) {\n    if (prerenderStore.runtimeStagePromise) {\n        return prerenderStore.runtimeStagePromise.then(()=>result);\n    }\n    return result;\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2417, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js"],"sourcesContent":["import { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from '../../server/app-render/work-unit-async-storage.external';\nexport function bailoutToClientRendering(reason) {\n    const workStore = workAsyncStorage.getStore();\n    if (workStore == null ? void 0 : workStore.forceStatic) return;\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-runtime':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                throw Object.defineProperty(new BailoutToCSRError(reason), \"__NEXT_ERROR_CODE\", {\n                    value: \"E394\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'request':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n}\n\n//# sourceMappingURL=bailout-to-client-rendering.js.map"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;AAGO,SAAS,yBAAyB,MAAM;IAC3C,MAAM,YAAY,iBAAiB,QAAQ;IAC3C,IAAI,aAAa,OAAO,KAAK,IAAI,UAAU,WAAW,EAAE;IACxD,MAAM,gBAAgB,qBAAqB,QAAQ;IACnD,IAAI,eAAe;QACf,OAAO,cAAc,IAAI;YACrB,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBACD,MAAM,OAAO,cAAc,CAAC,IAAI,wRAAiB,CAAC,SAAS,qBAAqB;oBAC5E,OAAO;oBACP,YAAY;oBACZ,cAAc;gBAClB;YACJ,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBACD;YACJ;gBACI;QACR;IACJ;AACJ,EAEA,uDAAuD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2465, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/navigation.js"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { AppRouterContext, LayoutRouterContext } from '../../shared/lib/app-router-context.shared-runtime';\nimport { SearchParamsContext, PathnameContext, PathParamsContext } from '../../shared/lib/hooks-client-context.shared-runtime';\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value';\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nimport { ReadonlyURLSearchParams } from './navigation.react-server';\nconst useDynamicRouteParams = typeof window === 'undefined' ? require('../../server/app-render/dynamic-rendering').useDynamicRouteParams : undefined;\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */ // Client components API\nexport function useSearchParams() {\n    const searchParams = useContext(SearchParamsContext);\n    // In the case where this is `null`, the compat types added in\n    // `next-env.d.ts` will add a new overload that changes the return type to\n    // include `null`.\n    const readonlySearchParams = useMemo(()=>{\n        if (!searchParams) {\n            // When the router is not ready in pages, we won't have the search params\n            // available.\n            return null;\n        }\n        return new ReadonlyURLSearchParams(searchParams);\n    }, [\n        searchParams\n    ]);\n    if (typeof window === 'undefined') {\n        // AsyncLocalStorage should not be included in the client bundle.\n        const { bailoutToClientRendering } = require('./bailout-to-client-rendering');\n        // TODO-APP: handle dynamic = 'force-static' here and on the client\n        bailoutToClientRendering('useSearchParams()');\n    }\n    return readonlySearchParams;\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */ // Client components API\nexport function usePathname() {\n    useDynamicRouteParams == null ? void 0 : useDynamicRouteParams('usePathname()');\n    // In the case where this is `null`, the compat types added in `next-env.d.ts`\n    // will add a new overload that changes the return type to include `null`.\n    return useContext(PathnameContext);\n}\n// Client components API\nexport { ServerInsertedHTMLContext, useServerInsertedHTML } from '../../shared/lib/server-inserted-html.shared-runtime';\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */ // Client components API\nexport function useRouter() {\n    const router = useContext(AppRouterContext);\n    if (router === null) {\n        throw Object.defineProperty(new Error('invariant expected app router to be mounted'), \"__NEXT_ERROR_CODE\", {\n            value: \"E238\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return router;\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */ // Client components API\nexport function useParams() {\n    useDynamicRouteParams == null ? void 0 : useDynamicRouteParams('useParams()');\n    return useContext(PathParamsContext);\n}\n/** Get the canonical parameters from the current level to the leaf node. */ // Client components API\nfunction getSelectedLayoutSegmentPath(tree, parallelRouteKey, first, segmentPath) {\n    if (first === void 0) first = true;\n    if (segmentPath === void 0) segmentPath = [];\n    let node;\n    if (first) {\n        // Use the provided parallel route key on the first parallel route\n        node = tree[1][parallelRouteKey];\n    } else {\n        // After first parallel route prefer children, if there's no children pick the first parallel route.\n        const parallelRoutes = tree[1];\n        var _parallelRoutes_children;\n        node = (_parallelRoutes_children = parallelRoutes.children) != null ? _parallelRoutes_children : Object.values(parallelRoutes)[0];\n    }\n    if (!node) return segmentPath;\n    const segment = node[0];\n    let segmentValue = getSegmentValue(segment);\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n        return segmentPath;\n    }\n    segmentPath.push(segmentValue);\n    return getSelectedLayoutSegmentPath(node, parallelRouteKey, false, segmentPath);\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */ // Client components API\nexport function useSelectedLayoutSegments(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = 'children';\n    useDynamicRouteParams == null ? void 0 : useDynamicRouteParams('useSelectedLayoutSegments()');\n    const context = useContext(LayoutRouterContext);\n    // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n    if (!context) return null;\n    return getSelectedLayoutSegmentPath(context.parentTree, parallelRouteKey);\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */ // Client components API\nexport function useSelectedLayoutSegment(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = 'children';\n    useDynamicRouteParams == null ? void 0 : useDynamicRouteParams('useSelectedLayoutSegment()');\n    const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey);\n    if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n        return null;\n    }\n    const selectedLayoutSegment = parallelRouteKey === 'children' ? selectedLayoutSegments[0] : selectedLayoutSegments[selectedLayoutSegments.length - 1];\n    // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n    // and returning an internal value like `__DEFAULT__` would be confusing.\n    return selectedLayoutSegment === DEFAULT_SEGMENT_KEY ? null : selectedLayoutSegment;\n}\nexport { unstable_isUnrecognizedActionError } from './unrecognized-action-error';\n// Shared components APIs\nexport { notFound, forbidden, unauthorized, redirect, permanentRedirect, RedirectType, ReadonlyURLSearchParams, unstable_rethrow } from './navigation.react-server';\n\n//# sourceMappingURL=navigation.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAoEA,wBAAwB;AACxB;;;;;;;;;;;;AApEA,MAAM,wBAAwB,uCAAgC,iLAAqD,qBAAqB,GAAG;AAqBpI,SAAS;IACZ,MAAM,eAAe,IAAA,uRAAU,EAAC,0TAAmB;IACnD,8DAA8D;IAC9D,0EAA0E;IAC1E,kBAAkB;IAClB,MAAM,uBAAuB,IAAA,oRAAO,EAAC;QACjC,IAAI,CAAC,cAAc;YACf,yEAAyE;YACzE,aAAa;YACb,OAAO;QACX;QACA,OAAO,IAAI,2SAAuB,CAAC;IACvC,GAAG;QACC;KACH;IACD,wCAAmC;QAC/B,iEAAiE;QACjE,MAAM,EAAE,wBAAwB,EAAE;QAClC,mEAAmE;QACnE,yBAAyB;IAC7B;IACA,OAAO;AACX;AAkBO,SAAS;IACZ,yBAAyB,OAAO,KAAK,IAAI,sBAAsB;IAC/D,8EAA8E;IAC9E,0EAA0E;IAC1E,OAAO,IAAA,uRAAU,EAAC,sTAAe;AACrC;;AAqBO,SAAS;IACZ,MAAM,SAAS,IAAA,uRAAU,EAAC,qTAAgB;IAC1C,IAAI,WAAW,MAAM;QACjB,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,gDAAgD,qBAAqB;YACvG,OAAO;YACP,YAAY;YACZ,cAAc;QAClB;IACJ;IACA,OAAO;AACX;AAkBO,SAAS;IACZ,yBAAyB,OAAO,KAAK,IAAI,sBAAsB;IAC/D,OAAO,IAAA,uRAAU,EAAC,wTAAiB;AACvC;AACA,0EAA0E,GAAG,wBAAwB;AACrG,SAAS,6BAA6B,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,WAAW;IAC5E,IAAI,UAAU,KAAK,GAAG,QAAQ;IAC9B,IAAI,gBAAgB,KAAK,GAAG,cAAc,EAAE;IAC5C,IAAI;IACJ,IAAI,OAAO;QACP,kEAAkE;QAClE,OAAO,IAAI,CAAC,EAAE,CAAC,iBAAiB;IACpC,OAAO;QACH,oGAAoG;QACpG,MAAM,iBAAiB,IAAI,CAAC,EAAE;QAC9B,IAAI;QACJ,OAAO,CAAC,2BAA2B,eAAe,QAAQ,KAAK,OAAO,2BAA2B,OAAO,MAAM,CAAC,eAAe,CAAC,EAAE;IACrI;IACA,IAAI,CAAC,MAAM,OAAO;IAClB,MAAM,UAAU,IAAI,CAAC,EAAE;IACvB,IAAI,eAAe,IAAA,8SAAe,EAAC;IACnC,IAAI,CAAC,gBAAgB,aAAa,UAAU,CAAC,uPAAgB,GAAG;QAC5D,OAAO;IACX;IACA,YAAY,IAAI,CAAC;IACjB,OAAO,6BAA6B,MAAM,kBAAkB,OAAO;AACvE;AA0BO,SAAS,0BAA0B,gBAAgB;IACtD,IAAI,qBAAqB,KAAK,GAAG,mBAAmB;IACpD,yBAAyB,OAAO,KAAK,IAAI,sBAAsB;IAC/D,MAAM,UAAU,IAAA,uRAAU,EAAC,wTAAmB;IAC9C,wFAAwF;IACxF,IAAI,CAAC,SAAS,OAAO;IACrB,OAAO,6BAA6B,QAAQ,UAAU,EAAE;AAC5D;AAmBO,SAAS,yBAAyB,gBAAgB;IACrD,IAAI,qBAAqB,KAAK,GAAG,mBAAmB;IACpD,yBAAyB,OAAO,KAAK,IAAI,sBAAsB;IAC/D,MAAM,yBAAyB,0BAA0B;IACzD,IAAI,CAAC,0BAA0B,uBAAuB,MAAM,KAAK,GAAG;QAChE,OAAO;IACX;IACA,MAAM,wBAAwB,qBAAqB,aAAa,sBAAsB,CAAC,EAAE,GAAG,sBAAsB,CAAC,uBAAuB,MAAM,GAAG,EAAE;IACrJ,yGAAyG;IACzG,yEAAyE;IACzE,OAAO,0BAA0B,0PAAmB,GAAG,OAAO;AAClE;;;CAKA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2594, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/redirect-boundary.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport { useRouter } from './navigation';\nimport { getRedirectTypeFromError, getURLFromRedirectError } from './redirect';\nimport { RedirectType, isRedirectError } from './redirect-error';\nfunction HandleRedirect(param) {\n    let { redirect, reset, redirectType } = param;\n    const router = useRouter();\n    useEffect(()=>{\n        React.startTransition(()=>{\n            if (redirectType === RedirectType.push) {\n                router.push(redirect, {});\n            } else {\n                router.replace(redirect, {});\n            }\n            reset();\n        });\n    }, [\n        redirect,\n        redirectType,\n        reset,\n        router\n    ]);\n    return null;\n}\nexport class RedirectErrorBoundary extends React.Component {\n    static getDerivedStateFromError(error) {\n        if (isRedirectError(error)) {\n            const url = getURLFromRedirectError(error);\n            const redirectType = getRedirectTypeFromError(error);\n            return {\n                redirect: url,\n                redirectType\n            };\n        }\n        // Re-throw if error is not for redirect\n        throw error;\n    }\n    // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n    render() {\n        const { redirect, redirectType } = this.state;\n        if (redirect !== null && redirectType !== null) {\n            return /*#__PURE__*/ _jsx(HandleRedirect, {\n                redirect: redirect,\n                redirectType: redirectType,\n                reset: ()=>this.setState({\n                        redirect: null\n                    })\n            });\n        }\n        return this.props.children;\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            redirect: null,\n            redirectType: null\n        };\n    }\n}\nexport function RedirectBoundary(param) {\n    let { children } = param;\n    const router = useRouter();\n    return /*#__PURE__*/ _jsx(RedirectErrorBoundary, {\n        router: router,\n        children: children\n    });\n}\n\n//# sourceMappingURL=redirect-boundary.js.map"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAMA,SAAS,eAAe,KAAK;IACzB,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG;IACxC,MAAM,SAAS,IAAA,0QAAS;IACxB,IAAA,sRAAS,EAAC;QACN,oRAAK,CAAC,eAAe,CAAC;YAClB,IAAI,iBAAiB,oQAAY,CAAC,IAAI,EAAE;gBACpC,OAAO,IAAI,CAAC,UAAU,CAAC;YAC3B,OAAO;gBACH,OAAO,OAAO,CAAC,UAAU,CAAC;YAC9B;YACA;QACJ;IACJ,GAAG;QACC;QACA;QACA;QACA;KACH;IACD,OAAO;AACX;AACO,MAAM,8BAA8B,oRAAK,CAAC,SAAS;IACtD,OAAO,yBAAyB,KAAK,EAAE;QACnC,IAAI,IAAA,uQAAe,EAAC,QAAQ;YACxB,MAAM,MAAM,IAAA,sQAAuB,EAAC;YACpC,MAAM,eAAe,IAAA,uQAAwB,EAAC;YAC9C,OAAO;gBACH,UAAU;gBACV;YACJ;QACJ;QACA,wCAAwC;QACxC,MAAM;IACV;IACA,yIAAyI;IACzI,SAAS;QACL,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK;QAC7C,IAAI,aAAa,QAAQ,iBAAiB,MAAM;YAC5C,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,gBAAgB;gBACtC,UAAU;gBACV,cAAc;gBACd,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;wBACjB,UAAU;oBACd;YACR;QACJ;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC9B;IACA,YAAY,KAAK,CAAC;QACd,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YACT,UAAU;YACV,cAAc;QAClB;IACJ;AACJ;AACO,SAAS,iBAAiB,KAAK;IAClC,IAAI,EAAE,QAAQ,EAAE,GAAG;IACnB,MAAM,SAAS,IAAA,0QAAS;IACxB,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,uBAAuB;QAC7C,QAAQ;QACR,UAAU;IACd;AACJ,EAEA,6CAA6C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2678, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/http-access-fallback/error-boundary.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\n/**\n * HTTPAccessFallbackBoundary is a boundary that catches errors and renders a\n * fallback component for HTTP errors.\n *\n * It receives the status code, and determine if it should render fallbacks for few HTTP 4xx errors.\n *\n * e.g. 404\n * 404 represents not found, and the fallback component pair contains the component and its styles.\n *\n */ import React, { useContext } from 'react';\nimport { useUntrackedPathname } from '../navigation-untracked';\nimport { HTTPAccessErrorStatus, getAccessFallbackHTTPStatus, getAccessFallbackErrorTypeByStatus, isHTTPAccessFallbackError } from './http-access-fallback';\nimport { warnOnce } from '../../../shared/lib/utils/warn-once';\nimport { MissingSlotContext } from '../../../shared/lib/app-router-context.shared-runtime';\nclass HTTPAccessFallbackErrorBoundary extends React.Component {\n    componentDidCatch() {\n        if (process.env.NODE_ENV === 'development' && this.props.missingSlots && this.props.missingSlots.size > 0 && // A missing children slot is the typical not-found case, so no need to warn\n        !this.props.missingSlots.has('children')) {\n            let warningMessage = 'No default component was found for a parallel route rendered on this page. Falling back to nearest NotFound boundary.\\n' + 'Learn more: https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#defaultjs\\n\\n';\n            const formattedSlots = Array.from(this.props.missingSlots).sort((a, b)=>a.localeCompare(b)).map((slot)=>\"@\" + slot).join(', ');\n            warningMessage += 'Missing slots: ' + formattedSlots;\n            warnOnce(warningMessage);\n        }\n    }\n    static getDerivedStateFromError(error) {\n        if (isHTTPAccessFallbackError(error)) {\n            const httpStatus = getAccessFallbackHTTPStatus(error);\n            return {\n                triggeredStatus: httpStatus\n            };\n        }\n        // Re-throw if error is not for 404\n        throw error;\n    }\n    static getDerivedStateFromProps(props, state) {\n        /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */ if (props.pathname !== state.previousPathname && state.triggeredStatus) {\n            return {\n                triggeredStatus: undefined,\n                previousPathname: props.pathname\n            };\n        }\n        return {\n            triggeredStatus: state.triggeredStatus,\n            previousPathname: props.pathname\n        };\n    }\n    render() {\n        const { notFound, forbidden, unauthorized, children } = this.props;\n        const { triggeredStatus } = this.state;\n        const errorComponents = {\n            [HTTPAccessErrorStatus.NOT_FOUND]: notFound,\n            [HTTPAccessErrorStatus.FORBIDDEN]: forbidden,\n            [HTTPAccessErrorStatus.UNAUTHORIZED]: unauthorized\n        };\n        if (triggeredStatus) {\n            const isNotFound = triggeredStatus === HTTPAccessErrorStatus.NOT_FOUND && notFound;\n            const isForbidden = triggeredStatus === HTTPAccessErrorStatus.FORBIDDEN && forbidden;\n            const isUnauthorized = triggeredStatus === HTTPAccessErrorStatus.UNAUTHORIZED && unauthorized;\n            // If there's no matched boundary in this layer, keep throwing the error by rendering the children\n            if (!(isNotFound || isForbidden || isUnauthorized)) {\n                return children;\n            }\n            return /*#__PURE__*/ _jsxs(_Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(\"meta\", {\n                        name: \"robots\",\n                        content: \"noindex\"\n                    }),\n                    process.env.NODE_ENV === 'development' && /*#__PURE__*/ _jsx(\"meta\", {\n                        name: \"boundary-next-error\",\n                        content: getAccessFallbackErrorTypeByStatus(triggeredStatus)\n                    }),\n                    errorComponents[triggeredStatus]\n                ]\n            });\n        }\n        return children;\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            triggeredStatus: undefined,\n            previousPathname: props.pathname\n        };\n    }\n}\nexport function HTTPAccessFallbackBoundary(param) {\n    let { notFound, forbidden, unauthorized, children } = param;\n    // When we're rendering the missing params shell, this will return null. This\n    // is because we won't be rendering any not found boundaries or error\n    // boundaries for the missing params shell. When this runs on the client\n    // (where these error can occur), we will get the correct pathname.\n    const pathname = useUntrackedPathname();\n    const missingSlots = useContext(MissingSlotContext);\n    const hasErrorFallback = !!(notFound || forbidden || unauthorized);\n    if (hasErrorFallback) {\n        return /*#__PURE__*/ _jsx(HTTPAccessFallbackErrorBoundary, {\n            pathname: pathname,\n            notFound: notFound,\n            forbidden: forbidden,\n            unauthorized: unauthorized,\n            missingSlots: missingSlots,\n            children: children\n        });\n    }\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: children\n    });\n}\n\n//# sourceMappingURL=error-boundary.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2812, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/router-reducer/create-router-cache-key.js"],"sourcesContent":["import { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment';\nexport function createRouterCacheKey(segment, withoutSearchParameters) {\n    if (withoutSearchParameters === void 0) withoutSearchParameters = false;\n    // if the segment is an array, it means it's a dynamic segment\n    // for example, ['lang', 'en', 'd']. We need to convert it to a string to store it as a cache node key.\n    if (Array.isArray(segment)) {\n        return segment[0] + \"|\" + segment[1] + \"|\" + segment[2];\n    }\n    // Page segments might have search parameters, ie __PAGE__?foo=bar\n    // When `withoutSearchParameters` is true, we only want to return the page segment\n    if (withoutSearchParameters && segment.startsWith(PAGE_SEGMENT_KEY)) {\n        return PAGE_SEGMENT_KEY;\n    }\n    return segment;\n}\n\n//# sourceMappingURL=create-router-cache-key.js.map"],"names":[],"mappings":";;;;AAAA;;AACO,SAAS,qBAAqB,OAAO,EAAE,uBAAuB;IACjE,IAAI,4BAA4B,KAAK,GAAG,0BAA0B;IAClE,8DAA8D;IAC9D,uGAAuG;IACvG,IAAI,MAAM,OAAO,CAAC,UAAU;QACxB,OAAO,OAAO,CAAC,EAAE,GAAG,MAAM,OAAO,CAAC,EAAE,GAAG,MAAM,OAAO,CAAC,EAAE;IAC3D;IACA,kEAAkE;IAClE,kFAAkF;IAClF,IAAI,2BAA2B,QAAQ,UAAU,CAAC,uPAAgB,GAAG;QACjE,OAAO,uPAAgB;IAC3B;IACA,OAAO;AACX,EAEA,mDAAmD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2836, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js"],"sourcesContent":["/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ export function ensureLeadingSlash(path) {\n    return path.startsWith('/') ? path : \"/\" + path;\n}\n\n//# sourceMappingURL=ensure-leading-slash.js.map"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAAU,SAAS,mBAAmB,IAAI;IACvC,OAAO,KAAK,UAAU,CAAC,OAAO,OAAO,MAAM;AAC/C,EAEA,gDAAgD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2850, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js"],"sourcesContent":["import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\nimport { isGroupSegment } from '../../segment';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (isGroupSegment(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === '@') {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1');\n}\n\n//# sourceMappingURL=app-paths.js.map"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAmBW,SAAS,iBAAiB,KAAK;IACtC,OAAO,IAAA,4RAAkB,EAAC,MAAM,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,UAAU,SAAS,OAAO;QACzE,8BAA8B;QAC9B,IAAI,CAAC,SAAS;YACV,OAAO;QACX;QACA,sBAAsB;QACtB,IAAI,IAAA,qPAAc,EAAC,UAAU;YACzB,OAAO;QACX;QACA,iCAAiC;QACjC,IAAI,OAAO,CAAC,EAAE,KAAK,KAAK;YACpB,OAAO;QACX;QACA,uDAAuD;QACvD,IAAI,CAAC,YAAY,UAAU,YAAY,OAAO,KAAK,UAAU,SAAS,MAAM,GAAG,GAAG;YAC9E,OAAO;QACX;QACA,OAAO,WAAW,MAAM;IAC5B,GAAG;AACP;AAIW,SAAS,gBAAgB,GAAG;IACnC,OAAO,IAAI,OAAO,CAAC,eACnB;AACJ,EAEA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2888, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/router/utils/interception-routes.js"],"sourcesContent":["import { normalizeAppPath } from './app-paths';\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n    '(..)(..)',\n    '(.)',\n    '(..)',\n    '(...)'\n];\nexport function isInterceptionRouteAppPath(path) {\n    // TODO-APP: add more serious validation\n    return path.split('/').find((segment)=>INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m))) !== undefined;\n}\nexport function extractInterceptionRouteInformation(path) {\n    let interceptingRoute, marker, interceptedRoute;\n    for (const segment of path.split('/')){\n        marker = INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));\n        if (marker) {\n            ;\n            [interceptingRoute, interceptedRoute] = path.split(marker, 2);\n            break;\n        }\n    }\n    if (!interceptingRoute || !marker || !interceptedRoute) {\n        throw Object.defineProperty(new Error(\"Invalid interception route: \" + path + \". Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E269\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n    ;\n    switch(marker){\n        case '(.)':\n            // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n            if (interceptingRoute === '/') {\n                interceptedRoute = \"/\" + interceptedRoute;\n            } else {\n                interceptedRoute = interceptingRoute + '/' + interceptedRoute;\n            }\n            break;\n        case '(..)':\n            // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n            if (interceptingRoute === '/') {\n                throw Object.defineProperty(new Error(\"Invalid interception route: \" + path + \". Cannot use (..) marker at the root level, use (.) instead.\"), \"__NEXT_ERROR_CODE\", {\n                    value: \"E207\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            interceptedRoute = interceptingRoute.split('/').slice(0, -1).concat(interceptedRoute).join('/');\n            break;\n        case '(...)':\n            // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n            interceptedRoute = '/' + interceptedRoute;\n            break;\n        case '(..)(..)':\n            // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n            const splitInterceptingRoute = interceptingRoute.split('/');\n            if (splitInterceptingRoute.length <= 2) {\n                throw Object.defineProperty(new Error(\"Invalid interception route: \" + path + \". Cannot use (..)(..) marker at the root level or one level up.\"), \"__NEXT_ERROR_CODE\", {\n                    value: \"E486\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            interceptedRoute = splitInterceptingRoute.slice(0, -2).concat(interceptedRoute).join('/');\n            break;\n        default:\n            throw Object.defineProperty(new Error('Invariant: unexpected marker'), \"__NEXT_ERROR_CODE\", {\n                value: \"E112\",\n                enumerable: false,\n                configurable: true\n            });\n    }\n    return {\n        interceptingRoute,\n        interceptedRoute\n    };\n}\n\n//# sourceMappingURL=interception-routes.js.map"],"names":[],"mappings":";;;;;;;;AAAA;;AAEO,MAAM,6BAA6B;IACtC;IACA;IACA;IACA;CACH;AACM,SAAS,2BAA2B,IAAI;IAC3C,wCAAwC;IACxC,OAAO,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,2BAA2B,IAAI,CAAC,CAAC,IAAI,QAAQ,UAAU,CAAC,SAAS;AAC5G;AACO,SAAS,oCAAoC,IAAI;IACpD,IAAI,mBAAmB,QAAQ;IAC/B,KAAK,MAAM,WAAW,KAAK,KAAK,CAAC,KAAK;QAClC,SAAS,2BAA2B,IAAI,CAAC,CAAC,IAAI,QAAQ,UAAU,CAAC;QACjE,IAAI,QAAQ;;YAER,CAAC,mBAAmB,iBAAiB,GAAG,KAAK,KAAK,CAAC,QAAQ;YAC3D;QACJ;IACJ;IACA,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,kBAAkB;QACpD,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,iCAAiC,OAAO,sFAAsF,qBAAqB;YACrL,OAAO;YACP,YAAY;YACZ,cAAc;QAClB;IACJ;IACA,oBAAoB,IAAA,+QAAgB,EAAC,mBAAmB,iDAAiD;;IAEzG,OAAO;QACH,KAAK;YACD,oIAAoI;YACpI,IAAI,sBAAsB,KAAK;gBAC3B,mBAAmB,MAAM;YAC7B,OAAO;gBACH,mBAAmB,oBAAoB,MAAM;YACjD;YACA;QACJ,KAAK;YACD,uHAAuH;YACvH,IAAI,sBAAsB,KAAK;gBAC3B,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,iCAAiC,OAAO,iEAAiE,qBAAqB;oBAChK,OAAO;oBACP,YAAY;oBACZ,cAAc;gBAClB;YACJ;YACA,mBAAmB,kBAAkB,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,kBAAkB,IAAI,CAAC;YAC3F;QACJ,KAAK;YACD,kIAAkI;YAClI,mBAAmB,MAAM;YACzB;QACJ,KAAK;YACD,iIAAiI;YACjI,MAAM,yBAAyB,kBAAkB,KAAK,CAAC;YACvD,IAAI,uBAAuB,MAAM,IAAI,GAAG;gBACpC,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,iCAAiC,OAAO,oEAAoE,qBAAqB;oBACnK,OAAO;oBACP,YAAY;oBACZ,cAAc;gBAClB;YACJ;YACA,mBAAmB,uBAAuB,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,kBAAkB,IAAI,CAAC;YACrF;QACJ;YACI,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,iCAAiC,qBAAqB;gBACxF,OAAO;gBACP,YAAY;gBACZ,cAAc;YAClB;IACR;IACA,OAAO;QACH;QACA;IACJ;AACJ,EAEA,+CAA+C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2979, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/router-reducer/reducers/has-interception-route-in-current-tree.js"],"sourcesContent":["import { isInterceptionRouteAppPath } from '../../../../shared/lib/router/utils/interception-routes';\nexport function hasInterceptionRouteInCurrentTree(param) {\n    let [segment, parallelRoutes] = param;\n    // If we have a dynamic segment, it's marked as an interception route by the presence of the `i` suffix.\n    if (Array.isArray(segment) && (segment[2] === 'di' || segment[2] === 'ci')) {\n        return true;\n    }\n    // If segment is not an array, apply the existing string-based check\n    if (typeof segment === 'string' && isInterceptionRouteAppPath(segment)) {\n        return true;\n    }\n    // Iterate through parallelRoutes if they exist\n    if (parallelRoutes) {\n        for(const key in parallelRoutes){\n            if (hasInterceptionRouteInCurrentTree(parallelRoutes[key])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n//# sourceMappingURL=has-interception-route-in-current-tree.js.map"],"names":[],"mappings":";;;;AAAA;;AACO,SAAS,kCAAkC,KAAK;IACnD,IAAI,CAAC,SAAS,eAAe,GAAG;IAChC,wGAAwG;IACxG,IAAI,MAAM,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,KAAK,QAAQ,OAAO,CAAC,EAAE,KAAK,IAAI,GAAG;QACxE,OAAO;IACX;IACA,oEAAoE;IACpE,IAAI,OAAO,YAAY,YAAY,IAAA,mSAA0B,EAAC,UAAU;QACpE,OAAO;IACX;IACA,+CAA+C;IAC/C,IAAI,gBAAgB;QAChB,IAAI,MAAM,OAAO,eAAe;YAC5B,IAAI,kCAAkC,cAAc,CAAC,IAAI,GAAG;gBACxD,OAAO;YACX;QACJ;IACJ;IACA,OAAO;AACX,EAEA,kEAAkE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3009, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/bfcache.js"],"sourcesContent":["import { useState } from 'react';\n// When the flag is disabled, only track the currently active tree\nconst MAX_BF_CACHE_ENTRIES = process.env.__NEXT_ROUTER_BF_CACHE ? 3 : 1;\n/**\n * Keeps track of the most recent N trees (FlightRouterStates) that were active\n * at a certain segment level. E.g. for a segment \"/a/b/[param]\", this hook\n * tracks the last N param values that the router rendered for N.\n *\n * The result of this hook precisely determines the number and order of\n * trees that are rendered in parallel at their segment level.\n *\n * The purpose of this cache is to we can preserve the React and DOM state of\n * some number of inactive trees, by rendering them in an <Activity> boundary.\n * That means it would not make sense for the the lifetime of the cache to be\n * any longer than the lifetime of the React tree; e.g. if the hook were\n * unmounted, then the React tree would be, too. So, we use React state to\n * manage it.\n *\n * Note that we don't store the RSC data for the cache entries in this hook —\n * the data for inactive segments is stored in the parent CacheNode, which\n * *does* have a longer lifetime than the React tree. This hook only determines\n * which of those trees should have their *state* preserved, by <Activity>.\n */ export function useRouterBFCache(activeTree, activeStateKey) {\n    // The currently active entry. The entries form a linked list, sorted in\n    // order of most recently active. This allows us to reuse parts of the list\n    // without cloning, unless there's a reordering or removal.\n    // TODO: Once we start tracking back/forward history at each route level,\n    // we should use the history order instead. In other words, when traversing\n    // to an existing entry as a result of a popstate event, we should maintain\n    // the existing order instead of moving it to the front of the list. I think\n    // an initial implementation of this could be to pass an incrementing id\n    // to history.pushState/replaceState, then use that here for ordering.\n    const [prevActiveEntry, setPrevActiveEntry] = useState(()=>{\n        const initialEntry = {\n            tree: activeTree,\n            stateKey: activeStateKey,\n            next: null\n        };\n        return initialEntry;\n    });\n    if (prevActiveEntry.tree === activeTree) {\n        // Fast path. The active tree hasn't changed, so we can reuse the\n        // existing state.\n        return prevActiveEntry;\n    }\n    // The route tree changed. Note that this doesn't mean that the tree changed\n    // *at this level* — the change may be due to a child route. Either way, we\n    // need to either add or update the router tree in the bfcache.\n    //\n    // The rest of the code looks more complicated than it actually is because we\n    // can't mutate the state in place; we have to copy-on-write.\n    // Create a new entry for the active cache key. This is the head of the new\n    // linked list.\n    const newActiveEntry = {\n        tree: activeTree,\n        stateKey: activeStateKey,\n        next: null\n    };\n    // We need to append the old list onto the new list. If the head of the new\n    // list was already present in the cache, then we'll need to clone everything\n    // that came before it. Then we can reuse the rest.\n    let n = 1;\n    let oldEntry = prevActiveEntry;\n    let clonedEntry = newActiveEntry;\n    while(oldEntry !== null && n < MAX_BF_CACHE_ENTRIES){\n        if (oldEntry.stateKey === activeStateKey) {\n            // Fast path. This entry in the old list that corresponds to the key that\n            // is now active. We've already placed a clone of this entry at the front\n            // of the new list. We can reuse the rest of the old list without cloning.\n            // NOTE: We don't need to worry about eviction in this case because we\n            // haven't increased the size of the cache, and we assume the max size\n            // is constant across renders. If we were to change it to a dynamic limit,\n            // then the implementation would need to account for that.\n            clonedEntry.next = oldEntry.next;\n            break;\n        } else {\n            // Clone the entry and append it to the list.\n            n++;\n            const entry = {\n                tree: oldEntry.tree,\n                stateKey: oldEntry.stateKey,\n                next: null\n            };\n            clonedEntry.next = entry;\n            clonedEntry = entry;\n        }\n        oldEntry = oldEntry.next;\n    }\n    setPrevActiveEntry(newActiveEntry);\n    return newActiveEntry;\n}\n\n//# sourceMappingURL=bfcache.js.map"],"names":[],"mappings":";;;;AAAA;;AACA,kEAAkE;AAClE,MAAM,uBAAuB,sCAAqC,0BAAI;AAoB3D,SAAS,iBAAiB,UAAU,EAAE,cAAc;IAC3D,wEAAwE;IACxE,2EAA2E;IAC3E,2DAA2D;IAC3D,yEAAyE;IACzE,2EAA2E;IAC3E,2EAA2E;IAC3E,4EAA4E;IAC5E,wEAAwE;IACxE,sEAAsE;IACtE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,qRAAQ,EAAC;QACnD,MAAM,eAAe;YACjB,MAAM;YACN,UAAU;YACV,MAAM;QACV;QACA,OAAO;IACX;IACA,IAAI,gBAAgB,IAAI,KAAK,YAAY;QACrC,iEAAiE;QACjE,kBAAkB;QAClB,OAAO;IACX;IACA,4EAA4E;IAC5E,2EAA2E;IAC3E,+DAA+D;IAC/D,EAAE;IACF,6EAA6E;IAC7E,6DAA6D;IAC7D,2EAA2E;IAC3E,eAAe;IACf,MAAM,iBAAiB;QACnB,MAAM;QACN,UAAU;QACV,MAAM;IACV;IACA,2EAA2E;IAC3E,6EAA6E;IAC7E,mDAAmD;IACnD,IAAI,IAAI;IACR,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,MAAM,aAAa,QAAQ,IAAI,qBAAqB;QAChD,IAAI,SAAS,QAAQ,KAAK,gBAAgB;YACtC,yEAAyE;YACzE,yEAAyE;YACzE,0EAA0E;YAC1E,sEAAsE;YACtE,sEAAsE;YACtE,0EAA0E;YAC1E,0DAA0D;YAC1D,YAAY,IAAI,GAAG,SAAS,IAAI;YAChC;QACJ,OAAO;YACH,6CAA6C;YAC7C;YACA,MAAM,QAAQ;gBACV,MAAM,SAAS,IAAI;gBACnB,UAAU,SAAS,QAAQ;gBAC3B,MAAM;YACV;YACA,YAAY,IAAI,GAAG;YACnB,cAAc;QAClB;QACA,WAAW,SAAS,IAAI;IAC5B;IACA,mBAAmB;IACnB,OAAO;AACX,EAEA,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3090, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/next-devtools/userspace/app/segment-explorer-node.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, createContext, useContext, use, useMemo, useCallback } from 'react';\nimport { useLayoutEffect } from 'react';\nimport { dispatcher } from 'next/dist/compiled/next-devtools';\nimport { notFound } from '../../../client/components/not-found';\nexport const SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE = 'NEXT_DEVTOOLS_SIMULATED_ERROR';\nfunction SegmentTrieNode(param) {\n    let { type, pagePath } = param;\n    const { boundaryType, setBoundaryType } = useSegmentState();\n    const nodeState = useMemo(()=>{\n        return {\n            type,\n            pagePath,\n            boundaryType,\n            setBoundaryType\n        };\n    }, [\n        type,\n        pagePath,\n        boundaryType,\n        setBoundaryType\n    ]);\n    // Use `useLayoutEffect` to ensure the state is updated during suspense.\n    // `useEffect` won't work as the state is preserved during suspense.\n    useLayoutEffect(()=>{\n        dispatcher.segmentExplorerNodeAdd(nodeState);\n        return ()=>{\n            dispatcher.segmentExplorerNodeRemove(nodeState);\n        };\n    }, [\n        nodeState\n    ]);\n    return null;\n}\nfunction NotFoundSegmentNode() {\n    notFound();\n}\nfunction ErrorSegmentNode() {\n    throw Object.defineProperty(new Error(SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst forever = new Promise(()=>{});\nfunction LoadingSegmentNode() {\n    use(forever);\n    return null;\n}\nexport function SegmentViewStateNode(param) {\n    let { page } = param;\n    useLayoutEffect(()=>{\n        dispatcher.segmentExplorerUpdateRouteState(page);\n        return ()=>{\n            dispatcher.segmentExplorerUpdateRouteState('');\n        };\n    }, [\n        page\n    ]);\n    return null;\n}\nexport function SegmentBoundaryTriggerNode() {\n    const { boundaryType } = useSegmentState();\n    let segmentNode = null;\n    if (boundaryType === 'loading') {\n        segmentNode = /*#__PURE__*/ _jsx(LoadingSegmentNode, {});\n    } else if (boundaryType === 'not-found') {\n        segmentNode = /*#__PURE__*/ _jsx(NotFoundSegmentNode, {});\n    } else if (boundaryType === 'error') {\n        segmentNode = /*#__PURE__*/ _jsx(ErrorSegmentNode, {});\n    }\n    return segmentNode;\n}\nexport function SegmentViewNode(param) {\n    let { type, pagePath, children } = param;\n    const segmentNode = /*#__PURE__*/ _jsx(SegmentTrieNode, {\n        type: type,\n        pagePath: pagePath\n    }, type);\n    return /*#__PURE__*/ _jsxs(_Fragment, {\n        children: [\n            segmentNode,\n            children\n        ]\n    });\n}\nconst SegmentStateContext = /*#__PURE__*/ createContext({\n    boundaryType: null,\n    setBoundaryType: ()=>{}\n});\nexport function SegmentStateProvider(param) {\n    let { children } = param;\n    const [boundaryType, setBoundaryType] = useState(null);\n    const [errorBoundaryKey, setErrorBoundaryKey] = useState(0);\n    const reloadBoundary = useCallback(()=>setErrorBoundaryKey((prev)=>prev + 1), []);\n    const setBoundaryTypeAndReload = useCallback((type)=>{\n        if (type === null) {\n            reloadBoundary();\n        }\n        setBoundaryType(type);\n    }, [\n        reloadBoundary\n    ]);\n    return /*#__PURE__*/ _jsx(SegmentStateContext.Provider, {\n        value: {\n            boundaryType,\n            setBoundaryType: setBoundaryTypeAndReload\n        },\n        children: children\n    }, errorBoundaryKey);\n}\nexport function useSegmentState() {\n    return useContext(SegmentStateContext);\n}\n\n//# sourceMappingURL=segment-explorer-node.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AALA;;;;;;AAMO,MAAM,2CAA2C;AACxD,SAAS,gBAAgB,KAAK;IAC1B,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG;IACzB,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,GAAG;IAC1C,MAAM,YAAY,IAAA,oRAAO,EAAC;QACtB,OAAO;YACH;YACA;YACA;YACA;QACJ;IACJ,GAAG;QACC;QACA;QACA;QACA;KACH;IACD,wEAAwE;IACxE,oEAAoE;IACpE,IAAA,4RAAe,EAAC;QACZ,uPAAU,CAAC,sBAAsB,CAAC;QAClC,OAAO;YACH,uPAAU,CAAC,yBAAyB,CAAC;QACzC;IACJ,GAAG;QACC;KACH;IACD,OAAO;AACX;AACA,SAAS;IACL,IAAA,2PAAQ;AACZ;AACA,SAAS;IACL,MAAM,OAAO,cAAc,CAAC,IAAI,MAAM,2CAA2C,qBAAqB;QAClG,OAAO;QACP,YAAY;QACZ,cAAc;IAClB;AACJ;AACA,MAAM,UAAU,IAAI,QAAQ,KAAK;AACjC,SAAS;IACL,IAAA,gRAAG,EAAC;IACJ,OAAO;AACX;AACO,SAAS,qBAAqB,KAAK;IACtC,IAAI,EAAE,IAAI,EAAE,GAAG;IACf,IAAA,4RAAe,EAAC;QACZ,uPAAU,CAAC,+BAA+B,CAAC;QAC3C,OAAO;YACH,uPAAU,CAAC,+BAA+B,CAAC;QAC/C;IACJ,GAAG;QACC;KACH;IACD,OAAO;AACX;AACO,SAAS;IACZ,MAAM,EAAE,YAAY,EAAE,GAAG;IACzB,IAAI,cAAc;IAClB,IAAI,iBAAiB,WAAW;QAC5B,cAAc,WAAW,GAAG,IAAA,kSAAI,EAAC,oBAAoB,CAAC;IAC1D,OAAO,IAAI,iBAAiB,aAAa;QACrC,cAAc,WAAW,GAAG,IAAA,kSAAI,EAAC,qBAAqB,CAAC;IAC3D,OAAO,IAAI,iBAAiB,SAAS;QACjC,cAAc,WAAW,GAAG,IAAA,kSAAI,EAAC,kBAAkB,CAAC;IACxD;IACA,OAAO;AACX;AACO,SAAS,gBAAgB,KAAK;IACjC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;IACnC,MAAM,cAAc,WAAW,GAAG,IAAA,kSAAI,EAAC,iBAAiB;QACpD,MAAM;QACN,UAAU;IACd,GAAG;IACH,OAAO,WAAW,GAAG,IAAA,mSAAK,EAAC,uSAAS,EAAE;QAClC,UAAU;YACN;YACA;SACH;IACL;AACJ;AACA,MAAM,sBAAsB,WAAW,GAAG,IAAA,0RAAa,EAAC;IACpD,cAAc;IACd,iBAAiB,KAAK;AAC1B;AACO,SAAS,qBAAqB,KAAK;IACtC,IAAI,EAAE,QAAQ,EAAE,GAAG;IACnB,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,qRAAQ,EAAC;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,qRAAQ,EAAC;IACzD,MAAM,iBAAiB,IAAA,wRAAW,EAAC,IAAI,oBAAoB,CAAC,OAAO,OAAO,IAAI,EAAE;IAChF,MAAM,2BAA2B,IAAA,wRAAW,EAAC,CAAC;QAC1C,IAAI,SAAS,MAAM;YACf;QACJ;QACA,gBAAgB;IACpB,GAAG;QACC;KACH;IACD,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,oBAAoB,QAAQ,EAAE;QACpD,OAAO;YACH;YACA,iBAAiB;QACrB;QACA,UAAU;IACd,GAAG;AACP;AACO,SAAS;IACZ,OAAO,IAAA,uRAAU,EAAC;AACtB,EAEA,iDAAiD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3227, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/layout-router.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { ACTION_SERVER_PATCH } from './router-reducer/router-reducer-types';\nimport React, { useContext, use, startTransition, Suspense, useDeferredValue } from 'react';\nimport ReactDOM from 'react-dom';\nimport { LayoutRouterContext, GlobalLayoutRouterContext, TemplateContext } from '../../shared/lib/app-router-context.shared-runtime';\nimport { fetchServerResponse } from './router-reducer/fetch-server-response';\nimport { unresolvedThenable } from './unresolved-thenable';\nimport { ErrorBoundary } from './error-boundary';\nimport { matchSegment } from './match-segments';\nimport { disableSmoothScrollDuringRouteTransition } from '../../shared/lib/router/utils/disable-smooth-scroll';\nimport { RedirectBoundary } from './redirect-boundary';\nimport { HTTPAccessFallbackBoundary } from './http-access-fallback/error-boundary';\nimport { createRouterCacheKey } from './router-reducer/create-router-cache-key';\nimport { hasInterceptionRouteInCurrentTree } from './router-reducer/reducers/has-interception-route-in-current-tree';\nimport { dispatchAppRouterAction } from './use-action-queue';\nimport { useRouterBFCache } from './bfcache';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nconst Activity = process.env.__NEXT_ROUTER_BF_CACHE ? require('react').unstable_Activity : null;\n/**\n * Add refetch marker to router state at the point of the current layout segment.\n * This ensures the response returned is not further down than the current layout segment.\n */ function walkAddRefetch(segmentPathToWalk, treeToRecreate) {\n    if (segmentPathToWalk) {\n        const [segment, parallelRouteKey] = segmentPathToWalk;\n        const isLast = segmentPathToWalk.length === 2;\n        if (matchSegment(treeToRecreate[0], segment)) {\n            if (treeToRecreate[1].hasOwnProperty(parallelRouteKey)) {\n                if (isLast) {\n                    const subTree = walkAddRefetch(undefined, treeToRecreate[1][parallelRouteKey]);\n                    return [\n                        treeToRecreate[0],\n                        {\n                            ...treeToRecreate[1],\n                            [parallelRouteKey]: [\n                                subTree[0],\n                                subTree[1],\n                                subTree[2],\n                                'refetch'\n                            ]\n                        }\n                    ];\n                }\n                return [\n                    treeToRecreate[0],\n                    {\n                        ...treeToRecreate[1],\n                        [parallelRouteKey]: walkAddRefetch(segmentPathToWalk.slice(2), treeToRecreate[1][parallelRouteKey])\n                    }\n                ];\n            }\n        }\n    }\n    return treeToRecreate;\n}\nconst __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n// TODO-APP: Replace with new React API for finding dom nodes without a `ref` when available\n/**\n * Wraps ReactDOM.findDOMNode with additional logic to hide React Strict Mode warning\n */ function findDOMNode(instance) {\n    // Tree-shake for server bundle\n    if (typeof window === 'undefined') return null;\n    // __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode is null during module init.\n    // We need to lazily reference it.\n    const internal_reactDOMfindDOMNode = __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode;\n    return internal_reactDOMfindDOMNode(instance);\n}\nconst rectProperties = [\n    'bottom',\n    'height',\n    'left',\n    'right',\n    'top',\n    'width',\n    'x',\n    'y'\n];\n/**\n * Check if a HTMLElement is hidden or fixed/sticky position\n */ function shouldSkipElement(element) {\n    // we ignore fixed or sticky positioned elements since they'll likely pass the \"in-viewport\" check\n    // and will result in a situation we bail on scroll because of something like a fixed nav,\n    // even though the actual page content is offscreen\n    if ([\n        'sticky',\n        'fixed'\n    ].includes(getComputedStyle(element).position)) {\n        if (process.env.NODE_ENV === 'development') {\n            console.warn('Skipping auto-scroll behavior due to `position: sticky` or `position: fixed` on element:', element);\n        }\n        return true;\n    }\n    // Uses `getBoundingClientRect` to check if the element is hidden instead of `offsetParent`\n    // because `offsetParent` doesn't consider document/body\n    const rect = element.getBoundingClientRect();\n    return rectProperties.every((item)=>rect[item] === 0);\n}\n/**\n * Check if the top corner of the HTMLElement is in the viewport.\n */ function topOfElementInViewport(element, viewportHeight) {\n    const rect = element.getBoundingClientRect();\n    return rect.top >= 0 && rect.top <= viewportHeight;\n}\n/**\n * Find the DOM node for a hash fragment.\n * If `top` the page has to scroll to the top of the page. This mirrors the browser's behavior.\n * If the hash fragment is an id, the page has to scroll to the element with that id.\n * If the hash fragment is a name, the page has to scroll to the first element with that name.\n */ function getHashFragmentDomNode(hashFragment) {\n    // If the hash fragment is `top` the page has to scroll to the top of the page.\n    if (hashFragment === 'top') {\n        return document.body;\n    }\n    var _document_getElementById;\n    // If the hash fragment is an id, the page has to scroll to the element with that id.\n    return (_document_getElementById = document.getElementById(hashFragment)) != null ? _document_getElementById : // If the hash fragment is a name, the page has to scroll to the first element with that name.\n    document.getElementsByName(hashFragment)[0];\n}\nclass InnerScrollAndFocusHandler extends React.Component {\n    componentDidMount() {\n        this.handlePotentialScroll();\n    }\n    componentDidUpdate() {\n        // Because this property is overwritten in handlePotentialScroll it's fine to always run it when true as it'll be set to false for subsequent renders.\n        if (this.props.focusAndScrollRef.apply) {\n            this.handlePotentialScroll();\n        }\n    }\n    render() {\n        return this.props.children;\n    }\n    constructor(...args){\n        super(...args), this.handlePotentialScroll = ()=>{\n            // Handle scroll and focus, it's only applied once in the first useEffect that triggers that changed.\n            const { focusAndScrollRef, segmentPath } = this.props;\n            if (focusAndScrollRef.apply) {\n                // segmentPaths is an array of segment paths that should be scrolled to\n                // if the current segment path is not in the array, the scroll is not applied\n                // unless the array is empty, in which case the scroll is always applied\n                if (focusAndScrollRef.segmentPaths.length !== 0 && !focusAndScrollRef.segmentPaths.some((scrollRefSegmentPath)=>segmentPath.every((segment, index)=>matchSegment(segment, scrollRefSegmentPath[index])))) {\n                    return;\n                }\n                let domNode = null;\n                const hashFragment = focusAndScrollRef.hashFragment;\n                if (hashFragment) {\n                    domNode = getHashFragmentDomNode(hashFragment);\n                }\n                // `findDOMNode` is tricky because it returns just the first child if the component is a fragment.\n                // This already caused a bug where the first child was a <link/> in head.\n                if (!domNode) {\n                    domNode = findDOMNode(this);\n                }\n                // If there is no DOM node this layout-router level is skipped. It'll be handled higher-up in the tree.\n                if (!(domNode instanceof Element)) {\n                    return;\n                }\n                // Verify if the element is a HTMLElement and if we want to consider it for scroll behavior.\n                // If the element is skipped, try to select the next sibling and try again.\n                while(!(domNode instanceof HTMLElement) || shouldSkipElement(domNode)){\n                    if (process.env.NODE_ENV !== 'production') {\n                        var _domNode_parentElement;\n                        if (((_domNode_parentElement = domNode.parentElement) == null ? void 0 : _domNode_parentElement.localName) === 'head') {\n                        // TODO: We enter this state when metadata was rendered as part of the page or via Next.js.\n                        // This is always a bug in Next.js and caused by React hoisting metadata.\n                        // We need to replace `findDOMNode` in favor of Fragment Refs (when available) so that we can skip over metadata.\n                        }\n                    }\n                    // No siblings found that match the criteria are found, so handle scroll higher up in the tree instead.\n                    if (domNode.nextElementSibling === null) {\n                        return;\n                    }\n                    domNode = domNode.nextElementSibling;\n                }\n                // State is mutated to ensure that the focus and scroll is applied only once.\n                focusAndScrollRef.apply = false;\n                focusAndScrollRef.hashFragment = null;\n                focusAndScrollRef.segmentPaths = [];\n                disableSmoothScrollDuringRouteTransition(()=>{\n                    // In case of hash scroll, we only need to scroll the element into view\n                    if (hashFragment) {\n                        ;\n                        domNode.scrollIntoView();\n                        return;\n                    }\n                    // Store the current viewport height because reading `clientHeight` causes a reflow,\n                    // and it won't change during this function.\n                    const htmlElement = document.documentElement;\n                    const viewportHeight = htmlElement.clientHeight;\n                    // If the element's top edge is already in the viewport, exit early.\n                    if (topOfElementInViewport(domNode, viewportHeight)) {\n                        return;\n                    }\n                    // Otherwise, try scrolling go the top of the document to be backward compatible with pages\n                    // scrollIntoView() called on `<html/>` element scrolls horizontally on chrome and firefox (that shouldn't happen)\n                    // We could use it to scroll horizontally following RTL but that also seems to be broken - it will always scroll left\n                    // scrollLeft = 0 also seems to ignore RTL and manually checking for RTL is too much hassle so we will scroll just vertically\n                    htmlElement.scrollTop = 0;\n                    // Scroll to domNode if domNode is not in viewport when scrolled to top of document\n                    if (!topOfElementInViewport(domNode, viewportHeight)) {\n                        // Scroll into view doesn't scroll horizontally by default when not needed\n                        ;\n                        domNode.scrollIntoView();\n                    }\n                }, {\n                    // We will force layout by querying domNode position\n                    dontForceLayout: true,\n                    onlyHashChange: focusAndScrollRef.onlyHashChange\n                });\n                // Mutate after scrolling so that it can be read by `disableSmoothScrollDuringRouteTransition`\n                focusAndScrollRef.onlyHashChange = false;\n                // Set focus on the element\n                domNode.focus();\n            }\n        };\n    }\n}\nfunction ScrollAndFocusHandler(param) {\n    let { segmentPath, children } = param;\n    const context = useContext(GlobalLayoutRouterContext);\n    if (!context) {\n        throw Object.defineProperty(new Error('invariant global layout router not mounted'), \"__NEXT_ERROR_CODE\", {\n            value: \"E473\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return /*#__PURE__*/ _jsx(InnerScrollAndFocusHandler, {\n        segmentPath: segmentPath,\n        focusAndScrollRef: context.focusAndScrollRef,\n        children: children\n    });\n}\n/**\n * InnerLayoutRouter handles rendering the provided segment based on the cache.\n */ function InnerLayoutRouter(param) {\n    let { tree, segmentPath, cacheNode, url } = param;\n    const context = useContext(GlobalLayoutRouterContext);\n    if (!context) {\n        throw Object.defineProperty(new Error('invariant global layout router not mounted'), \"__NEXT_ERROR_CODE\", {\n            value: \"E473\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const { tree: fullTree } = context;\n    // `rsc` represents the renderable node for this segment.\n    // If this segment has a `prefetchRsc`, it's the statically prefetched data.\n    // We should use that on initial render instead of `rsc`. Then we'll switch\n    // to `rsc` when the dynamic response streams in.\n    //\n    // If no prefetch data is available, then we go straight to rendering `rsc`.\n    const resolvedPrefetchRsc = cacheNode.prefetchRsc !== null ? cacheNode.prefetchRsc : cacheNode.rsc;\n    // We use `useDeferredValue` to handle switching between the prefetched and\n    // final values. The second argument is returned on initial render, then it\n    // re-renders with the first argument.\n    const rsc = useDeferredValue(cacheNode.rsc, resolvedPrefetchRsc);\n    // `rsc` is either a React node or a promise for a React node, except we\n    // special case `null` to represent that this segment's data is missing. If\n    // it's a promise, we need to unwrap it so we can determine whether or not the\n    // data is missing.\n    const resolvedRsc = typeof rsc === 'object' && rsc !== null && typeof rsc.then === 'function' ? use(rsc) : rsc;\n    if (!resolvedRsc) {\n        // The data for this segment is not available, and there's no pending\n        // navigation that will be able to fulfill it. We need to fetch more from\n        // the server and patch the cache.\n        // Check if there's already a pending request.\n        let lazyData = cacheNode.lazyData;\n        if (lazyData === null) {\n            /**\n       * Router state with refetch marker added\n       */ // TODO-APP: remove ''\n            const refetchTree = walkAddRefetch([\n                '',\n                ...segmentPath\n            ], fullTree);\n            const includeNextUrl = hasInterceptionRouteInCurrentTree(fullTree);\n            const navigatedAt = Date.now();\n            cacheNode.lazyData = lazyData = fetchServerResponse(new URL(url, location.origin), {\n                flightRouterState: refetchTree,\n                nextUrl: includeNextUrl ? context.nextUrl : null\n            }).then((serverResponse)=>{\n                startTransition(()=>{\n                    dispatchAppRouterAction({\n                        type: ACTION_SERVER_PATCH,\n                        previousTree: fullTree,\n                        serverResponse,\n                        navigatedAt\n                    });\n                });\n                return serverResponse;\n            });\n            // Suspend while waiting for lazyData to resolve\n            use(lazyData);\n        }\n        // Suspend infinitely as `changeByServerResponse` will cause a different part of the tree to be rendered.\n        // A falsey `resolvedRsc` indicates missing data -- we should not commit that branch, and we need to wait for the data to arrive.\n        use(unresolvedThenable);\n    }\n    // If we get to this point, then we know we have something we can render.\n    const subtree = // The layout router context narrows down tree and childNodes at each level.\n    /*#__PURE__*/ _jsx(LayoutRouterContext.Provider, {\n        value: {\n            parentTree: tree,\n            parentCacheNode: cacheNode,\n            parentSegmentPath: segmentPath,\n            // TODO-APP: overriding of url for parallel routes\n            url: url\n        },\n        children: resolvedRsc\n    });\n    // Ensure root layout is not wrapped in a div as the root layout renders `<html>`\n    return subtree;\n}\n/**\n * Renders suspense boundary with the provided \"loading\" property as the fallback.\n * If no loading property is provided it renders the children without a suspense boundary.\n */ function LoadingBoundary(param) {\n    let { loading, children } = param;\n    // If loading is a promise, unwrap it. This happens in cases where we haven't\n    // yet received the loading data from the server — which includes whether or\n    // not this layout has a loading component at all.\n    //\n    // It's OK to suspend here instead of inside the fallback because this\n    // promise will resolve simultaneously with the data for the segment itself.\n    // So it will never suspend for longer than it would have if we didn't use\n    // a Suspense fallback at all.\n    let loadingModuleData;\n    if (typeof loading === 'object' && loading !== null && typeof loading.then === 'function') {\n        const promiseForLoading = loading;\n        loadingModuleData = use(promiseForLoading);\n    } else {\n        loadingModuleData = loading;\n    }\n    if (loadingModuleData) {\n        const loadingRsc = loadingModuleData[0];\n        const loadingStyles = loadingModuleData[1];\n        const loadingScripts = loadingModuleData[2];\n        return /*#__PURE__*/ _jsx(Suspense, {\n            fallback: /*#__PURE__*/ _jsxs(_Fragment, {\n                children: [\n                    loadingStyles,\n                    loadingScripts,\n                    loadingRsc\n                ]\n            }),\n            children: children\n        });\n    }\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: children\n    });\n}\n/**\n * OuterLayoutRouter handles the current segment as well as <Offscreen> rendering of other segments.\n * It can be rendered next to each other with a different `parallelRouterKey`, allowing for Parallel routes.\n */ export default function OuterLayoutRouter(param) {\n    let { parallelRouterKey, error, errorStyles, errorScripts, templateStyles, templateScripts, template, notFound, forbidden, unauthorized, segmentViewBoundaries } = param;\n    const context = useContext(LayoutRouterContext);\n    if (!context) {\n        throw Object.defineProperty(new Error('invariant expected layout router to be mounted'), \"__NEXT_ERROR_CODE\", {\n            value: \"E56\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const { parentTree, parentCacheNode, parentSegmentPath, url } = context;\n    // Get the CacheNode for this segment by reading it from the parent segment's\n    // child map.\n    const parentParallelRoutes = parentCacheNode.parallelRoutes;\n    let segmentMap = parentParallelRoutes.get(parallelRouterKey);\n    // If the parallel router cache node does not exist yet, create it.\n    // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.\n    if (!segmentMap) {\n        segmentMap = new Map();\n        parentParallelRoutes.set(parallelRouterKey, segmentMap);\n    }\n    const parentTreeSegment = parentTree[0];\n    const segmentPath = parentSegmentPath === null ? // path. This has led to a bunch of special cases scattered throughout\n    // the code. We should clean this up.\n    [\n        parallelRouterKey\n    ] : parentSegmentPath.concat([\n        parentTreeSegment,\n        parallelRouterKey\n    ]);\n    // The \"state\" key of a segment is the one passed to React — it represents the\n    // identity of the UI tree. Whenever the state key changes, the tree is\n    // recreated and the state is reset. In the App Router model, search params do\n    // not cause state to be lost, so two segments with the same segment path but\n    // different search params should have the same state key.\n    //\n    // The \"cache\" key of a segment, however, *does* include the search params, if\n    // it's possible that the segment accessed the search params on the server.\n    // (This only applies to page segments; layout segments cannot access search\n    // params on the server.)\n    const activeTree = parentTree[1][parallelRouterKey];\n    const activeSegment = activeTree[0];\n    const activeStateKey = createRouterCacheKey(activeSegment, true) // no search params\n    ;\n    // At each level of the route tree, not only do we render the currently\n    // active segment — we also render the last N segments that were active at\n    // this level inside a hidden <Activity> boundary, to preserve their state\n    // if or when the user navigates to them again.\n    //\n    // bfcacheEntry is a linked list of FlightRouterStates.\n    let bfcacheEntry = useRouterBFCache(activeTree, activeStateKey);\n    let children = [];\n    do {\n        const tree = bfcacheEntry.tree;\n        const stateKey = bfcacheEntry.stateKey;\n        const segment = tree[0];\n        const cacheKey = createRouterCacheKey(segment);\n        // Read segment path from the parallel router cache node.\n        let cacheNode = segmentMap.get(cacheKey);\n        if (cacheNode === undefined) {\n            // When data is not available during rendering client-side we need to fetch\n            // it from the server.\n            const newLazyCacheNode = {\n                lazyData: null,\n                rsc: null,\n                prefetchRsc: null,\n                head: null,\n                prefetchHead: null,\n                parallelRoutes: new Map(),\n                loading: null,\n                navigatedAt: -1\n            };\n            // Flight data fetch kicked off during render and put into the cache.\n            cacheNode = newLazyCacheNode;\n            segmentMap.set(cacheKey, newLazyCacheNode);\n        }\n        /*\n    - Error boundary\n      - Only renders error boundary if error component is provided.\n      - Rendered for each segment to ensure they have their own error state.\n      - When gracefully degrade for bots, skip rendering error boundary.\n    - Loading boundary\n      - Only renders suspense boundary if loading components is provided.\n      - Rendered for each segment to ensure they have their own loading state.\n      - Passed to the router during rendering to ensure it can be immediately rendered when suspending on a Flight fetch.\n  */ let segmentBoundaryTriggerNode = null;\n        let segmentViewStateNode = null;\n        if (process.env.NODE_ENV !== 'production' && process.env.__NEXT_DEVTOOL_SEGMENT_EXPLORER) {\n            const { SegmentBoundaryTriggerNode, SegmentViewStateNode } = require('../../next-devtools/userspace/app/segment-explorer-node');\n            const pagePrefix = normalizeAppPath(url);\n            segmentViewStateNode = /*#__PURE__*/ _jsx(SegmentViewStateNode, {\n                page: pagePrefix\n            }, pagePrefix);\n            segmentBoundaryTriggerNode = /*#__PURE__*/ _jsx(_Fragment, {\n                children: /*#__PURE__*/ _jsx(SegmentBoundaryTriggerNode, {})\n            });\n        }\n        // TODO: The loading module data for a segment is stored on the parent, then\n        // applied to each of that parent segment's parallel route slots. In the\n        // simple case where there's only one parallel route (the `children` slot),\n        // this is no different from if the loading module data where stored on the\n        // child directly. But I'm not sure this actually makes sense when there are\n        // multiple parallel routes. It's not a huge issue because you always have\n        // the option to define a narrower loading boundary for a particular slot. But\n        // this sort of smells like an implementation accident to me.\n        const loadingModuleData = parentCacheNode.loading;\n        let child = /*#__PURE__*/ _jsxs(TemplateContext.Provider, {\n            value: /*#__PURE__*/ _jsxs(ScrollAndFocusHandler, {\n                segmentPath: segmentPath,\n                children: [\n                    /*#__PURE__*/ _jsx(ErrorBoundary, {\n                        errorComponent: error,\n                        errorStyles: errorStyles,\n                        errorScripts: errorScripts,\n                        children: /*#__PURE__*/ _jsx(LoadingBoundary, {\n                            loading: loadingModuleData,\n                            children: /*#__PURE__*/ _jsx(HTTPAccessFallbackBoundary, {\n                                notFound: notFound,\n                                forbidden: forbidden,\n                                unauthorized: unauthorized,\n                                children: /*#__PURE__*/ _jsxs(RedirectBoundary, {\n                                    children: [\n                                        /*#__PURE__*/ _jsx(InnerLayoutRouter, {\n                                            url: url,\n                                            tree: tree,\n                                            cacheNode: cacheNode,\n                                            segmentPath: segmentPath\n                                        }),\n                                        segmentBoundaryTriggerNode\n                                    ]\n                                })\n                            })\n                        })\n                    }),\n                    segmentViewStateNode\n                ]\n            }),\n            children: [\n                templateStyles,\n                templateScripts,\n                template\n            ]\n        }, stateKey);\n        if (process.env.NODE_ENV !== 'production') {\n            const { SegmentStateProvider } = require('../../next-devtools/userspace/app/segment-explorer-node');\n            child = /*#__PURE__*/ _jsxs(SegmentStateProvider, {\n                children: [\n                    child,\n                    segmentViewBoundaries\n                ]\n            }, stateKey);\n        }\n        if (process.env.__NEXT_ROUTER_BF_CACHE) {\n            child = /*#__PURE__*/ _jsx(Activity, {\n                mode: stateKey === activeStateKey ? 'visible' : 'hidden',\n                children: child\n            }, stateKey);\n        }\n        children.push(child);\n        bfcacheEntry = bfcacheEntry.next;\n    }while (bfcacheEntry !== null);\n    return children;\n}\n\n//# sourceMappingURL=layout-router.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3769, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/render-from-template-context.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport { TemplateContext } from '../../shared/lib/app-router-context.shared-runtime';\nexport default function RenderFromTemplateContext() {\n    const children = useContext(TemplateContext);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: children\n    });\n}\n\n//# sourceMappingURL=render-from-template-context.js.map"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;AAIe,SAAS;IACpB,MAAM,WAAW,IAAA,uRAAU,EAAC,oTAAe;IAC3C,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,uSAAS,EAAE;QACjC,UAAU;IACd;AACJ,EAEA,wDAAwD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3790, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js"],"sourcesContent":["export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map"],"names":[],"mappings":";;;;AAAO,MAAM;IACT,OAAO,IAAI,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC/B,MAAM,QAAQ,QAAQ,GAAG,CAAC,QAAQ,MAAM;QACxC,IAAI,OAAO,UAAU,YAAY;YAC7B,OAAO,MAAM,IAAI,CAAC;QACtB;QACA,OAAO;IACX;IACA,OAAO,IAAI,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;QACtC,OAAO,QAAQ,GAAG,CAAC,QAAQ,MAAM,OAAO;IAC5C;IACA,OAAO,IAAI,MAAM,EAAE,IAAI,EAAE;QACrB,OAAO,QAAQ,GAAG,CAAC,QAAQ;IAC/B;IACA,OAAO,eAAe,MAAM,EAAE,IAAI,EAAE;QAChC,OAAO,QAAQ,cAAc,CAAC,QAAQ;IAC1C;AACJ,EAEA,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3816, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js"],"sourcesContent":["import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Cache Components is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_CACHE_COMPONENTS ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,SAAS;AACb;AACA,iFAAiF;AACjF,MAAM,QAAQ,OAAO,kRAAW,KAAK,aAAa,kRAAW,GAAG,CAAC,KAAK;AACtE,2EAA2E;AAC3E,qEAAqE;AACrE,gBAAgB;AAChB,MAAM,iBAAiB,sCAAsC,0BAAgB,QAAQ,IAAI;AACzF,2CAA2C;AAC3C,wGAAwG;AACxG,MAAM,yBAAyB,MAC/B,CAAC;IACG,IAAI;QACA,eAAe,SAAS,OAAO;IACnC,SAAS;QACL,SAAS,OAAO,GAAG;IACvB;AACJ;AAWW,SAAS,4CAA4C,UAAU;IACtE,OAAO,SAAS,gBAAgB,GAAG,IAAI;QACnC,MAAM,UAAU,cAAc;QAC9B,wCAA2C;YACvC,IAAI;YACJ,MAAM,kBAAkB,CAAC,SAAS,IAAI,QAAQ,KAAK,KAAK,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC;YACrF,IAAI,oBAAoB,aAAa,gBAAgB,MAAM,GAAG,GAAG;gBAC7D,eAAe;YACnB,OAAO;gBACH,SAAS;gBACT,oBAAoB;gBACpB,uCAAuC;gBACvC,wBAAwB;gBACxB,iEAAiE;gBACjE,MAAM,MAAM,eAAe,CAAC,EAAE;gBAC9B,SAAS,OAAO,GAAG;gBACnB,uBAAuB;YAC3B;QACJ;;IAGJ;AACJ,EAEA,0EAA0E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3866, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/shared/lib/utils/reflect-utils.js"],"sourcesContent":["// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/;\nexport function describeStringPropertyAccess(target, prop) {\n    if (isDefinitelyAValidIdentifier.test(prop)) {\n        return \"`\" + target + \".\" + prop + \"`\";\n    }\n    return \"`\" + target + \"[\" + JSON.stringify(prop) + \"]`\";\n}\nexport function describeHasCheckingStringProperty(target, prop) {\n    const stringifiedProp = JSON.stringify(prop);\n    return \"`Reflect.has(\" + target + \", \" + stringifiedProp + \")`, `\" + stringifiedProp + \" in \" + target + \"`, or similar\";\n}\nexport const wellKnownProperties = new Set([\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'toString',\n    'valueOf',\n    'toLocaleString',\n    // Promise prototype\n    // fallthrough\n    'then',\n    'catch',\n    'finally',\n    // React Promise extension\n    // fallthrough\n    'status',\n    // React introspection\n    'displayName',\n    '_debugInfo',\n    // Common tested properties\n    // fallthrough\n    'toJSON',\n    '$$typeof',\n    '__esModule'\n]);\n\n//# sourceMappingURL=reflect-utils.js.map"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,iFAAiF;AACjF,0FAA0F;AAC1F,uFAAuF;AACvF,2DAA2D;;;;;;;;;AAC3D,MAAM,+BAA+B;AAC9B,SAAS,6BAA6B,MAAM,EAAE,IAAI;IACrD,IAAI,6BAA6B,IAAI,CAAC,OAAO;QACzC,OAAO,MAAM,SAAS,MAAM,OAAO;IACvC;IACA,OAAO,MAAM,SAAS,MAAM,KAAK,SAAS,CAAC,QAAQ;AACvD;AACO,SAAS,kCAAkC,MAAM,EAAE,IAAI;IAC1D,MAAM,kBAAkB,KAAK,SAAS,CAAC;IACvC,OAAO,kBAAkB,SAAS,OAAO,kBAAkB,UAAU,kBAAkB,SAAS,SAAS;AAC7G;AACO,MAAM,sBAAsB,IAAI,IAAI;IACvC;IACA;IACA;IACA;IACA;IACA;IACA,oBAAoB;IACpB,cAAc;IACd;IACA;IACA;IACA,0BAA0B;IAC1B,cAAc;IACd;IACA,sBAAsB;IACtB;IACA;IACA,2BAA2B;IAC3B,cAAc;IACd;IACA;IACA;CACH,GAED,yCAAyC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3918, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/server/request/search-params.js"],"sourcesContent":["import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { throwToInterruptStaticGeneration, postponeWithTracking, trackDynamicDataInDynamicRender, annotateDynamicAccess, trackSynchronousRequestDataAccessInDev, delayUntilRuntimeStage } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage, throwInvariantForMissingStore } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { makeDevtoolsIOAwarePromise, makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { describeStringPropertyAccess, describeHasCheckingStringProperty, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { throwWithStaticGenerationBailoutErrorWithDynamicError, throwForSearchParamsAccessInUseCache } from './utils';\nexport function createSearchParamsFromClient(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderSearchParams(workStore, workUnitStore);\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createSearchParamsFromClient should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E769\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createSearchParamsFromClient should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E739\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'request':\n                return createRenderSearchParams(underlyingSearchParams, workStore);\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata = createServerSearchParamsForServerPage;\nexport function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderSearchParams(workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerSearchParamsForServerPage should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E747\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderSearchParams(underlyingSearchParams, workUnitStore);\n            case 'request':\n                return createRenderSearchParams(underlyingSearchParams, workStore);\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createPrerenderSearchParamsForClientPage(workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n                // We're prerendering in a mode that aborts (cacheComponents) and should stall\n                // the promise to ensure the RSC side is considered dynamic\n                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, '`searchParams`');\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createPrerenderSearchParamsForClientPage should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E768\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createPrerenderSearchParamsForClientPage should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E746\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'request':\n                return Promise.resolve({});\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nfunction createStaticPrerenderSearchParams(workStore, prerenderStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    switch(prerenderStore.type){\n        case 'prerender':\n        case 'prerender-client':\n            // We are in a cacheComponents (PPR or otherwise) prerender\n            return makeHangingSearchParams(workStore, prerenderStore);\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // We are in a legacy static generation and need to interrupt the\n            // prerender when search params are accessed.\n            return makeErroringExoticSearchParams(workStore, prerenderStore);\n        default:\n            return prerenderStore;\n    }\n}\nfunction createRuntimePrerenderSearchParams(underlyingSearchParams, workUnitStore) {\n    return delayUntilRuntimeStage(workUnitStore, process.env.__NEXT_CACHE_COMPONENTS ? makeUntrackedSearchParams(underlyingSearchParams) : makeUntrackedExoticSearchParams(underlyingSearchParams));\n}\nfunction createRenderSearchParams(underlyingSearchParams, workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            // Semantically we only need the dev tracking when running in `next dev`\n            // but since you would never use next dev with production NODE_ENV we use this\n            // as a proxy so we can statically exclude this code from production builds.\n            if (process.env.__NEXT_CACHE_COMPONENTS) {\n                return makeUntrackedSearchParamsWithDevWarnings(underlyingSearchParams, workStore);\n            }\n            return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, workStore);\n        } else {\n            if (process.env.__NEXT_CACHE_COMPONENTS) {\n                return makeUntrackedSearchParams(underlyingSearchParams);\n            }\n            return makeUntrackedExoticSearchParams(underlyingSearchParams);\n        }\n    }\n}\nconst CachedSearchParams = new WeakMap();\nconst CachedSearchParamsForUseCache = new WeakMap();\nfunction makeHangingSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(prerenderStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`searchParams`');\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                default:\n                    {\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        }\n    });\n    CachedSearchParams.set(prerenderStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeErroringExoticSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const underlyingSearchParams = {};\n    // For search params we don't construct a ReactPromise because we want to interrupt\n    // rendering on any property access that was not set from outside and so we only want\n    // to have properties like value and status if React sets them.\n    const promise = Promise.resolve(underlyingSearchParams);\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string' && !wellKnownProperties.has(prop)) {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            if (workStore.dynamicShouldError) {\n                                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                            } else if (prerenderStore.type === 'prerender-ppr') {\n                                // PPR Prerender (no cacheComponents)\n                                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                            } else {\n                                // Legacy Prerender\n                                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                            }\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                if (workStore.dynamicShouldError) {\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                } else if (prerenderStore.type === 'prerender-ppr') {\n                    // PPR Prerender (no cacheComponents)\n                    postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                } else {\n                    // Legacy Prerender\n                    throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                }\n                return false;\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            if (workStore.dynamicShouldError) {\n                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n            } else if (prerenderStore.type === 'prerender-ppr') {\n                // PPR Prerender (no cacheComponents)\n                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n            } else {\n                // Legacy Prerender\n                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n            }\n        }\n    });\n    CachedSearchParams.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\n/**\n * This is a variation of `makeErroringExoticSearchParams` that always throws an\n * error on access, because accessing searchParams inside of `\"use cache\"` is\n * not allowed.\n */ export function makeErroringSearchParamsForUseCache(workStore) {\n    const cachedSearchParams = CachedSearchParamsForUseCache.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = Promise.resolve({});\n    const proxiedPromise = new Proxy(promise, {\n        get: function get(target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it. We know it\n                // isn't a dynamic access because it can only be something that was\n                // previously written to the promise and thus not an underlying\n                // searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            if (typeof prop === 'string' && (prop === 'then' || !wellKnownProperties.has(prop))) {\n                throwForSearchParamsAccessInUseCache(workStore, get);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has: function has(target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests throw an error. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string' && (prop === 'then' || !wellKnownProperties.has(prop))) {\n                throwForSearchParamsAccessInUseCache(workStore, has);\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys: function ownKeys() {\n            throwForSearchParamsAccessInUseCache(workStore, ownKeys);\n        }\n    });\n    CachedSearchParamsForUseCache.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeUntrackedExoticSearchParams(underlyingSearchParams) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingSearchParams);\n    CachedSearchParams.set(underlyingSearchParams, promise);\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (!wellKnownProperties.has(prop)) {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const workUnitStore = workUnitAsyncStorage.getStore();\n                    if (workUnitStore) {\n                        trackDynamicDataInDynamicRender(workUnitStore);\n                    }\n                    return underlyingSearchParams[prop];\n                },\n                set (value) {\n                    Object.defineProperty(promise, prop, {\n                        value,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedSearchParams(underlyingSearchParams) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = Promise.resolve(underlyingSearchParams);\n    CachedSearchParams.set(underlyingSearchParams, promise);\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n    // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n    // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n    // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n    // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n    // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n    let promiseInitialized = false;\n    const proxiedUnderlying = new Proxy(underlyingSearchParams, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string' && promiseInitialized) {\n                if (store.dynamicShouldError) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n                const workUnitStore = workUnitAsyncStorage.getStore();\n                if (workUnitStore) {\n                    trackDynamicDataInDynamicRender(workUnitStore);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (store.dynamicShouldError) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            if (store.dynamicShouldError) {\n                const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            return Reflect.ownKeys(target);\n        }\n    });\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = makeDevtoolsIOAwarePromise(underlyingSearchParams);\n    promise.then(()=>{\n        promiseInitialized = true;\n    });\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            Object.defineProperty(promise, prop, {\n                get () {\n                    return proxiedUnderlying[prop];\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (prop === 'then' && store.dynamicShouldError) {\n                const expression = '`searchParams.then`';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            const expression = '`Object.keys(searchParams)` or similar';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);\n    return proxiedPromise;\n}\n// Similar to `makeDynamicallyTrackedExoticSearchParamsWithDevWarnings`, but\n// just logging the sync access without actually defining the search params on\n// the promise.\nfunction makeUntrackedSearchParamsWithDevWarnings(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    const promise = makeDevtoolsIOAwarePromise(underlyingSearchParams);\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    warnForSyncAccess(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    warnForSyncAccess(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            const expression = '`Object.keys(searchParams)` or similar';\n            warnForIncompleteEnumeration(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'request':\n                if (workUnitStore.prerenderPhase === true) {\n                    // When we're rendering dynamically in dev, we need to advance out of\n                    // the Prerender environment when we read Request data synchronously.\n                    trackSynchronousRequestDataAccessInDev(workUnitStore);\n                }\n                break;\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createSearchAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createSearchAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E249\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin or well-known property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E2\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=search-params.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4562, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/server/request/params.js"],"sourcesContent":["import { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev, delayUntilRuntimeStage } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage, throwInvariantForMissingStore } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { makeDevtoolsIOAwarePromise, makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { dynamicAccessAsyncStorage } from '../app-render/dynamic-access-async-storage.external';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E736\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E770\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForRoute should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E738\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForServerSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E743\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams) {\n    const workStore = workAsyncStorage.getStore();\n    if (!workStore) {\n        throw Object.defineProperty(new InvariantError('Missing workStore in createPrerenderParamsForClientSegment'), \"__NEXT_ERROR_CODE\", {\n            value: \"E773\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n                const fallbackParams = workUnitStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(let key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingPromise(workUnitStore.renderSignal, workStore.route, '`params`');\n                        }\n                    }\n                }\n                break;\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createPrerenderParamsForClientSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E734\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'prerender-runtime':\n            case 'request':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createStaticPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    switch(prerenderStore.type){\n        case 'prerender':\n        case 'prerender-client':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingParams(underlyingParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-ppr':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-legacy':\n            break;\n        default:\n            prerenderStore;\n    }\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedParams(underlyingParams);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nfunction createRuntimePrerenderParams(underlyingParams, workUnitStore) {\n    return delayUntilRuntimeStage(workUnitStore, process.env.__NEXT_CACHE_COMPONENTS ? makeUntrackedParams(underlyingParams) : makeUntrackedExoticParams(underlyingParams));\n}\nfunction createRenderParamsInProd(underlyingParams) {\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedParams(underlyingParams);\n    }\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParamsInDev(underlyingParams, devFallbackParams, workStore) {\n    let hasFallbackParams = false;\n    if (devFallbackParams) {\n        for(let key in underlyingParams){\n            if (devFallbackParams.has(key)) {\n                hasFallbackParams = true;\n                break;\n            }\n        }\n    }\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore);\n    }\n    return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore);\n}\nconst CachedParams = new WeakMap();\nconst fallbackParamsProxyHandler = {\n    get: function get(target, prop, receiver) {\n        if (prop === 'then' || prop === 'catch' || prop === 'finally') {\n            const originalMethod = ReflectAdapter.get(target, prop, receiver);\n            return ({\n                [prop]: (...args)=>{\n                    const store = dynamicAccessAsyncStorage.getStore();\n                    if (store) {\n                        store.abortController.abort(Object.defineProperty(new Error(`Accessed fallback \\`params\\` during prerendering.`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E691\",\n                            enumerable: false,\n                            configurable: true\n                        }));\n                    }\n                    return new Proxy(originalMethod.apply(target, args), fallbackParamsProxyHandler);\n                }\n            })[prop];\n        }\n        return ReflectAdapter.get(target, prop, receiver);\n    }\n};\nfunction makeHangingParams(underlyingParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = new Proxy(makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`params`'), fallbackParamsProxyHandler);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when cacheComponents is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when cacheComponents is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                ;\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            ;\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = hasFallbackParams ? makeDevtoolsIOAwarePromise(underlyingParams) : Promise.resolve(underlyingParams);\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\n// Similar to `makeDynamicallyTrackedExoticParamsWithDevWarnings`, but just\n// logging the sync access without actually defining the params on the promise.\nfunction makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = hasFallbackParams ? makeDevtoolsIOAwarePromise(underlyingParams) : Promise.resolve(underlyingParams);\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    warnForSyncAccess(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            warnForIncompleteEnumeration(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'request':\n                if (workUnitStore.prerenderPhase === true) {\n                    // When we're rendering dynamically in dev, we need to advance out of\n                    // the Prerender environment when we read Request data synchronously.\n                    trackSynchronousRequestDataAccessInDev(workUnitStore);\n                }\n                break;\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E307\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E482\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5123, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/client-page.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { InvariantError } from '../../shared/lib/invariant-error';\n/**\n * When the Page is a client component we send the params and searchParams to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Page component.\n *\n * additionally we may send promises representing the params and searchParams. We don't ever use these passed\n * values but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations.\n * It is up to the caller to decide if the promises are needed.\n */ export function ClientPageRoot(param) {\n    let { Component, searchParams, params, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    promises } = param;\n    if (typeof window === 'undefined') {\n        const { workAsyncStorage } = require('../../server/app-render/work-async-storage.external');\n        let clientSearchParams;\n        let clientParams;\n        // We are going to instrument the searchParams prop with tracking for the\n        // appropriate context. We wrap differently in prerendering vs rendering\n        const store = workAsyncStorage.getStore();\n        if (!store) {\n            throw Object.defineProperty(new InvariantError('Expected workStore to exist when handling searchParams in a client Page.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E564\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const { createSearchParamsFromClient } = require('../../server/request/search-params');\n        clientSearchParams = createSearchParamsFromClient(searchParams, store);\n        const { createParamsFromClient } = require('../../server/request/params');\n        clientParams = createParamsFromClient(params, store);\n        return /*#__PURE__*/ _jsx(Component, {\n            params: clientParams,\n            searchParams: clientSearchParams\n        });\n    } else {\n        const { createRenderSearchParamsFromClient } = require('../request/search-params.browser');\n        const clientSearchParams = createRenderSearchParamsFromClient(searchParams);\n        const { createRenderParamsFromClient } = require('../request/params.browser');\n        const clientParams = createRenderParamsFromClient(params);\n        return /*#__PURE__*/ _jsx(Component, {\n            params: clientParams,\n            searchParams: clientSearchParams\n        });\n    }\n}\n\n//# sourceMappingURL=client-page.js.map"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAUW,SAAS,eAAe,KAAK;IACpC,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,EACrC,QAAQ,EAAE,GAAG;IACb,wCAAmC;QAC/B,MAAM,EAAE,gBAAgB,EAAE;;;;;QAC1B,IAAI;QACJ,IAAI;QACJ,yEAAyE;QACzE,wEAAwE;QACxE,MAAM,QAAQ,iBAAiB,QAAQ;QACvC,IAAI,CAAC,OAAO;YACR,MAAM,OAAO,cAAc,CAAC,IAAI,gQAAc,CAAC,6EAA6E,qBAAqB;gBAC7I,OAAO;gBACP,YAAY;gBACZ,cAAc;YAClB;QACJ;QACA,MAAM,EAAE,4BAA4B,EAAE;QACtC,qBAAqB,6BAA6B,cAAc;QAChE,MAAM,EAAE,sBAAsB,EAAE;QAChC,eAAe,uBAAuB,QAAQ;QAC9C,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,WAAW;YACjC,QAAQ;YACR,cAAc;QAClB;IACJ;;AAUJ,EAEA,uCAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5167, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/client-segment.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { InvariantError } from '../../shared/lib/invariant-error';\n/**\n * When the Page is a client component we send the params to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Segment component.\n *\n * additionally we may send a promise representing params. We don't ever use this passed\n * value but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations\n * such as when cacheComponents is enabled. It is up to the caller to decide if the promises are needed.\n */ export function ClientSegmentRoot(param) {\n    let { Component, slots, params, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    promise } = param;\n    if (typeof window === 'undefined') {\n        const { workAsyncStorage } = require('../../server/app-render/work-async-storage.external');\n        let clientParams;\n        // We are going to instrument the searchParams prop with tracking for the\n        // appropriate context. We wrap differently in prerendering vs rendering\n        const store = workAsyncStorage.getStore();\n        if (!store) {\n            throw Object.defineProperty(new InvariantError('Expected workStore to exist when handling params in a client segment such as a Layout or Template.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E600\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const { createParamsFromClient } = require('../../server/request/params');\n        clientParams = createParamsFromClient(params, store);\n        return /*#__PURE__*/ _jsx(Component, {\n            ...slots,\n            params: clientParams\n        });\n    } else {\n        const { createRenderParamsFromClient } = require('../request/params.browser');\n        const clientParams = createRenderParamsFromClient(params);\n        return /*#__PURE__*/ _jsx(Component, {\n            ...slots,\n            params: clientParams\n        });\n    }\n}\n\n//# sourceMappingURL=client-segment.js.map"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAUW,SAAS,kBAAkB,KAAK;IACvC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAC9B,OAAO,EAAE,GAAG;IACZ,wCAAmC;QAC/B,MAAM,EAAE,gBAAgB,EAAE;;;;;QAC1B,IAAI;QACJ,yEAAyE;QACzE,wEAAwE;QACxE,MAAM,QAAQ,iBAAiB,QAAQ;QACvC,IAAI,CAAC,OAAO;YACR,MAAM,OAAO,cAAc,CAAC,IAAI,gQAAc,CAAC,uGAAuG,qBAAqB;gBACvK,OAAO;gBACP,YAAY;gBACZ,cAAc;YAClB;QACJ;QACA,MAAM,EAAE,sBAAsB,EAAE;QAChC,eAAe,uBAAuB,QAAQ;QAC9C,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,WAAW;YACjC,GAAG,KAAK;YACR,QAAQ;QACZ;IACJ;;AAQJ,EAEA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5208, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/lib/metadata/generate/icon-mark.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// This is a client component that only renders during SSR,\n// but will be replaced during streaming with an icon insertion script tag.\n// We don't want it to be presented anywhere so it's only visible during streaming,\n// right after the icon meta tags so that browser can pick it up as soon as it's rendered.\n// Note: we don't just emit the script here because we only need the script if it's not in the head,\n// and we need it to be hoistable alongside the other metadata but sync scripts are not hoistable.\nexport const IconMark = ()=>{\n    if (typeof window !== 'undefined') {\n        return null;\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"\\xabnxt-icon\\xbb\"\n    });\n};\n\n//# sourceMappingURL=icon-mark.js.map"],"names":[],"mappings":";;;;AACA;AADA;;AAQO,MAAM,WAAW;IACpB;;IAGA,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,QAAQ;QAC9B,MAAM;IACV;AACJ,GAEA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5226, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/client/components/metadata/async-metadata.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Suspense, use } from 'react';\nfunction MetadataOutlet(param) {\n    let { promise } = param;\n    const { error, digest } = use(promise);\n    if (error) {\n        if (digest) {\n            // The error will lose its original digest after passing from server layer to client layer；\n            // We recover the digest property here to override the React created one if original digest exists.\n            ;\n            error.digest = digest;\n        }\n        throw error;\n    }\n    return null;\n}\nexport function AsyncMetadataOutlet(param) {\n    let { promise } = param;\n    return /*#__PURE__*/ _jsx(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/ _jsx(MetadataOutlet, {\n            promise: promise\n        })\n    });\n}\n\n//# sourceMappingURL=async-metadata.js.map"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAGA,SAAS,eAAe,KAAK;IACzB,IAAI,EAAE,OAAO,EAAE,GAAG;IAClB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAA,gRAAG,EAAC;IAC9B,IAAI,OAAO;QACP,IAAI,QAAQ;YACR,2FAA2F;YAC3F,mGAAmG;;YAEnG,MAAM,MAAM,GAAG;QACnB;QACA,MAAM;IACV;IACA,OAAO;AACX;AACO,SAAS,oBAAoB,KAAK;IACrC,IAAI,EAAE,OAAO,EAAE,GAAG;IAClB,OAAO,WAAW,GAAG,IAAA,kSAAI,EAAC,qRAAQ,EAAE;QAChC,UAAU;QACV,UAAU,WAAW,GAAG,IAAA,kSAAI,EAAC,gBAAgB;YACzC,SAAS;QACb;IACJ;AACJ,EAEA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5262, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CHIRAG%20PAUL/Desktop/MedSecureAI---Impactverse-Client1/frontend/node_modules/next/dist/esm/lib/framework/boundary-components.js"],"sourcesContent":["'use client';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME, ROOT_LAYOUT_BOUNDARY_NAME } from './boundary-constants';\n// We use a namespace object to allow us to recover the name of the function\n// at runtime even when production bundling/minification is used.\nconst NameSpace = {\n    [METADATA_BOUNDARY_NAME]: function({ children }) {\n        return children;\n    },\n    [VIEWPORT_BOUNDARY_NAME]: function({ children }) {\n        return children;\n    },\n    [OUTLET_BOUNDARY_NAME]: function({ children }) {\n        return children;\n    },\n    [ROOT_LAYOUT_BOUNDARY_NAME]: function({ children }) {\n        return children;\n    }\n};\nexport const MetadataBoundary = // We use slice(0) to trick the bundler into not inlining/minifying the function\n// so it retains the name inferred from the namespace object\nNameSpace[METADATA_BOUNDARY_NAME.slice(0)];\nexport const ViewportBoundary = // We use slice(0) to trick the bundler into not inlining/minifying the function\n// so it retains the name inferred from the namespace object\nNameSpace[VIEWPORT_BOUNDARY_NAME.slice(0)];\nexport const OutletBoundary = // We use slice(0) to trick the bundler into not inlining/minifying the function\n// so it retains the name inferred from the namespace object\nNameSpace[OUTLET_BOUNDARY_NAME.slice(0)];\nexport const RootLayoutBoundary = // We use slice(0) to trick the bundler into not inlining/minifying the function\n// so it retains the name inferred from the namespace object\nNameSpace[ROOT_LAYOUT_BOUNDARY_NAME.slice(0)];\n\n//# sourceMappingURL=boundary-components.js.map"],"names":[],"mappings":";;;;;;;;;;AACA;AADA;;AAEA,4EAA4E;AAC5E,iEAAiE;AACjE,MAAM,YAAY;IACd,CAAC,8QAAsB,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE;QAC3C,OAAO;IACX;IACA,CAAC,8QAAsB,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE;QAC3C,OAAO;IACX;IACA,CAAC,4QAAoB,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE;QACzC,OAAO;IACX;IACA,CAAC,iRAAyB,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE;QAC9C,OAAO;IACX;AACJ;AACO,MAAM,mBACb,4DAA4D;AAC5D,SAAS,CAAC,8QAAsB,CAAC,KAAK,CAAC,GAAG;AACnC,MAAM,mBACb,4DAA4D;AAC5D,SAAS,CAAC,8QAAsB,CAAC,KAAK,CAAC,GAAG;AACnC,MAAM,iBACb,4DAA4D;AAC5D,SAAS,CAAC,4QAAoB,CAAC,KAAK,CAAC,GAAG;AACjC,MAAM,qBACb,4DAA4D;AAC5D,SAAS,CAAC,iRAAyB,CAAC,KAAK,CAAC,GAAG,EAE7C,+CAA+C","ignoreList":[0],"debugId":null}}]
}